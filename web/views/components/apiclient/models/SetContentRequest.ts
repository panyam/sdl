/* tslint:disable */
/* eslint-disable */
/**
 * leetcoach/v1/models.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContentFieldsToBePatchedBasedOnTheUpdateMask } from './ContentFieldsToBePatchedBasedOnTheUpdateMask';
import {
    ContentFieldsToBePatchedBasedOnTheUpdateMaskFromJSON,
    ContentFieldsToBePatchedBasedOnTheUpdateMaskFromJSONTyped,
    ContentFieldsToBePatchedBasedOnTheUpdateMaskToJSON,
    ContentFieldsToBePatchedBasedOnTheUpdateMaskToJSONTyped,
} from './ContentFieldsToBePatchedBasedOnTheUpdateMask';

/**
 * 
 * @export
 * @interface SetContentRequest
 */
export interface SetContentRequest {
    /**
     * 
     * @type {ContentFieldsToBePatchedBasedOnTheUpdateMask}
     * @memberof SetContentRequest
     */
    content?: ContentFieldsToBePatchedBasedOnTheUpdateMask;
    /**
     * Optional: New content bytes.
     * @type {string}
     * @memberof SetContentRequest
     */
    contentBytes?: string;
    /**
     * Mask specifying which fields are being updated.
     * Valid paths: "content_type", "format", "content_bytes".
     * @type {string}
     * @memberof SetContentRequest
     */
    updateMask?: string;
}

/**
 * Check if a given object implements the SetContentRequest interface.
 */
export function instanceOfSetContentRequest(value: object): value is SetContentRequest {
    return true;
}

export function SetContentRequestFromJSON(json: any): SetContentRequest {
    return SetContentRequestFromJSONTyped(json, false);
}

export function SetContentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetContentRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : ContentFieldsToBePatchedBasedOnTheUpdateMaskFromJSON(json['content']),
        'contentBytes': json['contentBytes'] == null ? undefined : json['contentBytes'],
        'updateMask': json['updateMask'] == null ? undefined : json['updateMask'],
    };
}

export function SetContentRequestToJSON(json: any): SetContentRequest {
    return SetContentRequestToJSONTyped(json, false);
}

export function SetContentRequestToJSONTyped(value?: SetContentRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': ContentFieldsToBePatchedBasedOnTheUpdateMaskToJSON(value['content']),
        'contentBytes': value['contentBytes'],
        'updateMask': value['updateMask'],
    };
}

