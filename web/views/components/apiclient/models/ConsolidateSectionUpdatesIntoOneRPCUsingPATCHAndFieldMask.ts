/* tslint:disable */
/* eslint-disable */
/**
 * leetcoach/v1/models.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SectionObjectContainingOnlyTheFieldsToBeUpdatedTheServerWillUseTheUpdateMaskToKnowWhichFieldsFromThisSectionMessageToApplyToTheStoredSection } from './SectionObjectContainingOnlyTheFieldsToBeUpdatedTheServerWillUseTheUpdateMaskToKnowWhichFieldsFromThisSectionMessageToApplyToTheStoredSection';
import {
    SectionObjectContainingOnlyTheFieldsToBeUpdatedTheServerWillUseTheUpdateMaskToKnowWhichFieldsFromThisSectionMessageToApplyToTheStoredSectionFromJSON,
    SectionObjectContainingOnlyTheFieldsToBeUpdatedTheServerWillUseTheUpdateMaskToKnowWhichFieldsFromThisSectionMessageToApplyToTheStoredSectionFromJSONTyped,
    SectionObjectContainingOnlyTheFieldsToBeUpdatedTheServerWillUseTheUpdateMaskToKnowWhichFieldsFromThisSectionMessageToApplyToTheStoredSectionToJSON,
    SectionObjectContainingOnlyTheFieldsToBeUpdatedTheServerWillUseTheUpdateMaskToKnowWhichFieldsFromThisSectionMessageToApplyToTheStoredSectionToJSONTyped,
} from './SectionObjectContainingOnlyTheFieldsToBeUpdatedTheServerWillUseTheUpdateMaskToKnowWhichFieldsFromThisSectionMessageToApplyToTheStoredSection';

/**
 * 
 * @export
 * @interface ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMask
 */
export interface ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMask {
    /**
     * 
     * @type {SectionObjectContainingOnlyTheFieldsToBeUpdatedTheServerWillUseTheUpdateMaskToKnowWhichFieldsFromThisSectionMessageToApplyToTheStoredSection}
     * @memberof ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMask
     */
    section?: SectionObjectContainingOnlyTheFieldsToBeUpdatedTheServerWillUseTheUpdateMaskToKnowWhichFieldsFromThisSectionMessageToApplyToTheStoredSection;
    /**
     * 
     * @type {string}
     * @memberof ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMask
     */
    updateMask?: string;
}

/**
 * Check if a given object implements the ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMask interface.
 */
export function instanceOfConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMask(value: object): value is ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMask {
    return true;
}

export function ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMaskFromJSON(json: any): ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMask {
    return ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMaskFromJSONTyped(json, false);
}

export function ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMask {
    if (json == null) {
        return json;
    }
    return {
        
        'section': json['section'] == null ? undefined : SectionObjectContainingOnlyTheFieldsToBeUpdatedTheServerWillUseTheUpdateMaskToKnowWhichFieldsFromThisSectionMessageToApplyToTheStoredSectionFromJSON(json['section']),
        'updateMask': json['updateMask'] == null ? undefined : json['updateMask'],
    };
}

export function ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMaskToJSON(json: any): ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMask {
    return ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMaskToJSONTyped(json, false);
}

export function ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMaskToJSONTyped(value?: ConsolidateSectionUpdatesIntoOneRPCUsingPATCHAndFieldMask | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'section': SectionObjectContainingOnlyTheFieldsToBeUpdatedTheServerWillUseTheUpdateMaskToKnowWhichFieldsFromThisSectionMessageToApplyToTheStoredSectionToJSON(value['section']),
        'updateMask': value['updateMask'],
    };
}

