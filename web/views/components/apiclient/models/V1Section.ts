/* tslint:disable */
/* eslint-disable */
/**
 * leetcoach/v1/models.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1PlotSectionContent } from './V1PlotSectionContent';
import {
    V1PlotSectionContentFromJSON,
    V1PlotSectionContentFromJSONTyped,
    V1PlotSectionContentToJSON,
    V1PlotSectionContentToJSONTyped,
} from './V1PlotSectionContent';
import type { V1SectionType } from './V1SectionType';
import {
    V1SectionTypeFromJSON,
    V1SectionTypeFromJSONTyped,
    V1SectionTypeToJSON,
    V1SectionTypeToJSONTyped,
} from './V1SectionType';
import type { V1DrawingSectionContent } from './V1DrawingSectionContent';
import {
    V1DrawingSectionContentFromJSON,
    V1DrawingSectionContentFromJSONTyped,
    V1DrawingSectionContentToJSON,
    V1DrawingSectionContentToJSONTyped,
} from './V1DrawingSectionContent';
import type { V1TextSectionContent } from './V1TextSectionContent';
import {
    V1TextSectionContentFromJSON,
    V1TextSectionContentFromJSONTyped,
    V1TextSectionContentToJSON,
    V1TextSectionContentToJSONTyped,
} from './V1TextSectionContent';

/**
 * 
 * @export
 * @interface V1Section
 */
export interface V1Section {
    /**
     * 
     * @type {Date}
     * @memberof V1Section
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1Section
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof V1Section
     */
    id?: string;
    /**
     * *
     * Which design this section belong to.
     * @type {string}
     * @memberof V1Section
     */
    designId?: string;
    /**
     * 
     * @type {V1SectionType}
     * @memberof V1Section
     */
    type?: V1SectionType;
    /**
     * *
     * Title of this section.
     * @type {string}
     * @memberof V1Section
     */
    title?: string;
    /**
     * e.g., "application/json", "text/html" etc
     * @type {string}
     * @memberof V1Section
     */
    contentType?: string;
    /**
     * *
     * Format of the section.
     * 
     * e.g., "chartjs/json", "plotly/json"
     * @type {string}
     * @memberof V1Section
     */
    format?: string;
    /**
     * *
     * Order of the section in the list of sections.  This is a readonly field.
     * @type {number}
     * @memberof V1Section
     */
    order?: number;
    /**
     * 
     * @type {V1TextSectionContent}
     * @memberof V1Section
     */
    textContent?: V1TextSectionContent;
    /**
     * 
     * @type {V1DrawingSectionContent}
     * @memberof V1Section
     */
    drawingContent?: V1DrawingSectionContent;
    /**
     * 
     * @type {V1PlotSectionContent}
     * @memberof V1Section
     */
    plotContent?: V1PlotSectionContent;
}



/**
 * Check if a given object implements the V1Section interface.
 */
export function instanceOfV1Section(value: object): value is V1Section {
    return true;
}

export function V1SectionFromJSON(json: any): V1Section {
    return V1SectionFromJSONTyped(json, false);
}

export function V1SectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Section {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'id': json['id'] == null ? undefined : json['id'],
        'designId': json['designId'] == null ? undefined : json['designId'],
        'type': json['type'] == null ? undefined : V1SectionTypeFromJSON(json['type']),
        'title': json['title'] == null ? undefined : json['title'],
        'contentType': json['contentType'] == null ? undefined : json['contentType'],
        'format': json['format'] == null ? undefined : json['format'],
        'order': json['order'] == null ? undefined : json['order'],
        'textContent': json['textContent'] == null ? undefined : V1TextSectionContentFromJSON(json['textContent']),
        'drawingContent': json['drawingContent'] == null ? undefined : V1DrawingSectionContentFromJSON(json['drawingContent']),
        'plotContent': json['plotContent'] == null ? undefined : V1PlotSectionContentFromJSON(json['plotContent']),
    };
}

export function V1SectionToJSON(json: any): V1Section {
    return V1SectionToJSONTyped(json, false);
}

export function V1SectionToJSONTyped(value?: V1Section | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'id': value['id'],
        'designId': value['designId'],
        'type': V1SectionTypeToJSON(value['type']),
        'title': value['title'],
        'contentType': value['contentType'],
        'format': value['format'],
        'order': value['order'],
        'textContent': V1TextSectionContentToJSON(value['textContent']),
        'drawingContent': V1DrawingSectionContentToJSON(value['drawingContent']),
        'plotContent': V1PlotSectionContentToJSON(value['plotContent']),
    };
}

