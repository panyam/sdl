/* tslint:disable */
/* eslint-disable */
/**
 * leetcoach/v1/models.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TagBeingUpdated
 */
export interface TagBeingUpdated {
    /**
     * 
     * @type {Date}
     * @memberof TagBeingUpdated
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TagBeingUpdated
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof TagBeingUpdated
     */
    normalizedName?: string;
    /**
     * 
     * @type {string}
     * @memberof TagBeingUpdated
     */
    firstUserId?: string;
    /**
     * 
     * @type {string}
     * @memberof TagBeingUpdated
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof TagBeingUpdated
     */
    imageUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof TagBeingUpdated
     */
    numDesigns?: string;
}

/**
 * Check if a given object implements the TagBeingUpdated interface.
 */
export function instanceOfTagBeingUpdated(value: object): value is TagBeingUpdated {
    return true;
}

export function TagBeingUpdatedFromJSON(json: any): TagBeingUpdated {
    return TagBeingUpdatedFromJSONTyped(json, false);
}

export function TagBeingUpdatedFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagBeingUpdated {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'normalizedName': json['normalizedName'] == null ? undefined : json['normalizedName'],
        'firstUserId': json['firstUserId'] == null ? undefined : json['firstUserId'],
        'description': json['description'] == null ? undefined : json['description'],
        'imageUrl': json['imageUrl'] == null ? undefined : json['imageUrl'],
        'numDesigns': json['numDesigns'] == null ? undefined : json['numDesigns'],
    };
}

export function TagBeingUpdatedToJSON(json: any): TagBeingUpdated {
    return TagBeingUpdatedToJSONTyped(json, false);
}

export function TagBeingUpdatedToJSONTyped(value?: TagBeingUpdated | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'normalizedName': value['normalizedName'],
        'firstUserId': value['firstUserId'],
        'description': value['description'],
        'imageUrl': value['imageUrl'],
        'numDesigns': value['numDesigns'],
    };
}

