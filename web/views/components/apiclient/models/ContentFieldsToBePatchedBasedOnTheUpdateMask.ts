/* tslint:disable */
/* eslint-disable */
/**
 * leetcoach/v1/models.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContentFieldsToBePatchedBasedOnTheUpdateMask
 */
export interface ContentFieldsToBePatchedBasedOnTheUpdateMask {
    /**
     * 
     * @type {Date}
     * @memberof ContentFieldsToBePatchedBasedOnTheUpdateMask
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ContentFieldsToBePatchedBasedOnTheUpdateMask
     */
    updatedAt?: Date;
    /**
     * e.g., "application/json", "text/html" etc
     * @type {string}
     * @memberof ContentFieldsToBePatchedBasedOnTheUpdateMask
     */
    type?: string;
    /**
     * *
     * Format of the section.
     * 
     * e.g., "chartjs/json", "plotly/json"
     * @type {string}
     * @memberof ContentFieldsToBePatchedBasedOnTheUpdateMask
     */
    format?: string;
}

/**
 * Check if a given object implements the ContentFieldsToBePatchedBasedOnTheUpdateMask interface.
 */
export function instanceOfContentFieldsToBePatchedBasedOnTheUpdateMask(value: object): value is ContentFieldsToBePatchedBasedOnTheUpdateMask {
    return true;
}

export function ContentFieldsToBePatchedBasedOnTheUpdateMaskFromJSON(json: any): ContentFieldsToBePatchedBasedOnTheUpdateMask {
    return ContentFieldsToBePatchedBasedOnTheUpdateMaskFromJSONTyped(json, false);
}

export function ContentFieldsToBePatchedBasedOnTheUpdateMaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentFieldsToBePatchedBasedOnTheUpdateMask {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'type': json['type'] == null ? undefined : json['type'],
        'format': json['format'] == null ? undefined : json['format'],
    };
}

export function ContentFieldsToBePatchedBasedOnTheUpdateMaskToJSON(json: any): ContentFieldsToBePatchedBasedOnTheUpdateMask {
    return ContentFieldsToBePatchedBasedOnTheUpdateMaskToJSONTyped(json, false);
}

export function ContentFieldsToBePatchedBasedOnTheUpdateMaskToJSONTyped(value?: ContentFieldsToBePatchedBasedOnTheUpdateMask | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'type': value['type'],
        'format': value['format'],
    };
}

