/* tslint:disable */
/* eslint-disable */
/**
 * leetcoach/v1/models.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1Design
 */
export interface V1Design {
    /**
     * 
     * @type {Date}
     * @memberof V1Design
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1Design
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof V1Design
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof V1Design
     */
    ownerId?: string;
    /**
     * 
     * @type {string}
     * @memberof V1Design
     */
    visibility?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1Design
     */
    visibleTo?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof V1Design
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof V1Design
     */
    description?: string;
    /**
     * Metadata about the content itself that user may want to
     * highlight (or the system extracts).
     * @type {object}
     * @memberof V1Design
     */
    contentMetadata?: object;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1Design
     */
    sectionIds?: Array<string>;
}

/**
 * Check if a given object implements the V1Design interface.
 */
export function instanceOfV1Design(value: object): value is V1Design {
    return true;
}

export function V1DesignFromJSON(json: any): V1Design {
    return V1DesignFromJSONTyped(json, false);
}

export function V1DesignFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Design {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'id': json['id'] == null ? undefined : json['id'],
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
        'visibility': json['visibility'] == null ? undefined : json['visibility'],
        'visibleTo': json['visibleTo'] == null ? undefined : json['visibleTo'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'contentMetadata': json['contentMetadata'] == null ? undefined : json['contentMetadata'],
        'sectionIds': json['sectionIds'] == null ? undefined : json['sectionIds'],
    };
}

export function V1DesignToJSON(json: any): V1Design {
    return V1DesignToJSONTyped(json, false);
}

export function V1DesignToJSONTyped(value?: V1Design | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'id': value['id'],
        'ownerId': value['ownerId'],
        'visibility': value['visibility'],
        'visibleTo': value['visibleTo'],
        'name': value['name'],
        'description': value['description'],
        'contentMetadata': value['contentMetadata'],
        'sectionIds': value['sectionIds'],
    };
}

