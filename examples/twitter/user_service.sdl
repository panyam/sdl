import OpStatus from "./common.sdl"
import UserStore from "./storage.sdl"

component UserService {
  uses userStore UserStore

  // UserID is assumed to be globally unique string
  // ProfileData is a string (e.g., JSON) for MVP
  method RegisterUser(userID String, profileData String) OpStatus {
    // In real system: check if userID exists etc.
    delay 1ms // service logic overhead
    return self.userStore.CreateUserProfile(userID, profileData)
  }

  method Follow(followerID String, followeeID String) OpStatus {
    // Add validation: user exists, not self-follow, etc.
    delay 1ms
    if followerID == followeeID {
      return OpStatus.INVALID_INPUT
    }
    // Check if already following (optional for MVP)
    return self.userStore.AddFollow(followerID, followeeID)
  }

  method Unfollow(followerID String, followeeID String) OpStatus {
    delay 1ms
    return self.userStore.RemoveFollow(followerID, followeeID)
  }

  method GetFollowingList(userID String) List[String] {
    delay 1ms
    return self.userStore.GetFollowing(userID)
  }
}
