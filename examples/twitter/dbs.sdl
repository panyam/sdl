
import HashIndex from "../common.sdl" ;
import BTreeIndex from "../common.sdl" ;

enum DBResult { FOUND, NOT_FOUND, INTERNAL_ERROR }
enum DuplicateCheck { FOUND, NOTFOUND, ERROR }

component Database {
    // We assume our databases are generic and contain an index for finding by ID
    // and one for listing in some sorted order.   If we have multiple sort orders we
    // would need an seperate index each
    // This model is simplistic in that it holds the entire DB in a single node

    uses ItemsById HashIndex()
    uses ItemList BTreeIndex()

    // Tries to get an entry by short URL
    method Create() Bool {
        // Create an entry - add to both indexes
        // Add other latencies if needed for transactions etc
        ItemsById.Insert()
        ItemList.Insert()
        return true
    }

    method GetById() Bool {
        return ItemsById.Find()
    }

    method ListItems() Bool {
        return ItemList.Range()
    }
}

component TweetsDB {
}

component FollowsDB {
}

