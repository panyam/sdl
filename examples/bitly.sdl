
import NativeDisk, HttpStatusCode, HashIndex from "./common" ;

// We could use a custom disk or a NativeDisk
component Disk {
  method Read() {
    // Make 1 in 1000 reads fail
    distribute 1000 {
    999 => {
          distribute 100 {         // 99.9% successes
              90 => delay 10us
              9 => delay 50us
              1 => delay 10ms
          }
          return true
      }
      default => {
          distribute {     // .1% failure rates
              90 => delay 10us
              9 => delay 50us
              1 => delay 10ms
          }
          return false
      }
    }
  }

  // Give similar characteristics to a read
  method Write() bool {
    // Make 1 in 1000 reads fail
    distribute 1000 {
      999 => {
          distribute 100 {         // 99.9% successes
              90 => delay 10us
              9 => delay 50us
              1 => delay 10ms
          }
          return true
      }
      default => {
          distribute {     // .1% failure rates
              90 => delay 10us
              9 => delay 50us
              1 => delay 10ms
          }
          return false
      }
    }
  }
}

component Database {
    // The DB index for mapping short codes -> urls
    uses ByShortCode HashIndex
}

component AppServer {
  // Our main DB
  uses DB Database

  method Shorten() HttpStatusCode {
  }

  method Redirect() HttpStatusCode {
  }
}

system Bitly {
    // Order of dependencies does not matter  They will be bound later
    use app AppServer = {db = db}
    use db Database
}
