// FILE: ./proto/leetcoach/v1/llm_service.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: leetcoach/v1/llm_service.proto

package protos

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SimpleLlmQueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DesignId      string                 `protobuf:"bytes,1,opt,name=design_id,json=designId,proto3" json:"design_id,omitempty"`    // Optional: Context for the query
	SectionId     string                 `protobuf:"bytes,2,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"` // Optional: Context for the query
	Prompt        string                 `protobuf:"bytes,3,opt,name=prompt,proto3" json:"prompt,omitempty"`                        // The actual text prompt for the LLM
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleLlmQueryRequest) Reset() {
	*x = SimpleLlmQueryRequest{}
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleLlmQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleLlmQueryRequest) ProtoMessage() {}

func (x *SimpleLlmQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleLlmQueryRequest.ProtoReflect.Descriptor instead.
func (*SimpleLlmQueryRequest) Descriptor() ([]byte, []int) {
	return file_leetcoach_v1_llm_service_proto_rawDescGZIP(), []int{0}
}

func (x *SimpleLlmQueryRequest) GetDesignId() string {
	if x != nil {
		return x.DesignId
	}
	return ""
}

func (x *SimpleLlmQueryRequest) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *SimpleLlmQueryRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

type SimpleLlmQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResponseText  string                 `protobuf:"bytes,1,opt,name=response_text,json=responseText,proto3" json:"response_text,omitempty"` // The text response from the LLM
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleLlmQueryResponse) Reset() {
	*x = SimpleLlmQueryResponse{}
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleLlmQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleLlmQueryResponse) ProtoMessage() {}

func (x *SimpleLlmQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleLlmQueryResponse.ProtoReflect.Descriptor instead.
func (*SimpleLlmQueryResponse) Descriptor() ([]byte, []int) {
	return file_leetcoach_v1_llm_service_proto_rawDescGZIP(), []int{1}
}

func (x *SimpleLlmQueryResponse) GetResponseText() string {
	if x != nil {
		return x.ResponseText
	}
	return ""
}

type SuggestSectionsRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	DesignId              string                 `protobuf:"bytes,1,opt,name=design_id,json=designId,proto3" json:"design_id,omitempty"`                                          // ID of the design to provide context
	ExistingSectionTitles []string               `protobuf:"bytes,2,rep,name=existing_section_titles,json=existingSectionTitles,proto3" json:"existing_section_titles,omitempty"` // List of titles already present
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SuggestSectionsRequest) Reset() {
	*x = SuggestSectionsRequest{}
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestSectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestSectionsRequest) ProtoMessage() {}

func (x *SuggestSectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestSectionsRequest.ProtoReflect.Descriptor instead.
func (*SuggestSectionsRequest) Descriptor() ([]byte, []int) {
	return file_leetcoach_v1_llm_service_proto_rawDescGZIP(), []int{2}
}

func (x *SuggestSectionsRequest) GetDesignId() string {
	if x != nil {
		return x.DesignId
	}
	return ""
}

func (x *SuggestSectionsRequest) GetExistingSectionTitles() []string {
	if x != nil {
		return x.ExistingSectionTitles
	}
	return nil
}

type SuggestedSection struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Title              string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                                       // The suggested title for the new section
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                                         // Suggested type ("text", "drawing", "plot")
	Description        string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                           // A brief description explaining the suggestion
	GetAnswerPrompt    string                 `protobuf:"bytes,4,opt,name=get_answer_prompt,json=getAnswerPrompt,proto3" json:"get_answer_prompt,omitempty"`          // Suggested prompt for generating content
	VerifyAnswerPrompt string                 `protobuf:"bytes,5,opt,name=verify_answer_prompt,json=verifyAnswerPrompt,proto3" json:"verify_answer_prompt,omitempty"` // Suggested prompt for verifying content
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SuggestedSection) Reset() {
	*x = SuggestedSection{}
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestedSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestedSection) ProtoMessage() {}

func (x *SuggestedSection) ProtoReflect() protoreflect.Message {
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestedSection.ProtoReflect.Descriptor instead.
func (*SuggestedSection) Descriptor() ([]byte, []int) {
	return file_leetcoach_v1_llm_service_proto_rawDescGZIP(), []int{3}
}

func (x *SuggestedSection) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SuggestedSection) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SuggestedSection) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SuggestedSection) GetGetAnswerPrompt() string {
	if x != nil {
		return x.GetAnswerPrompt
	}
	return ""
}

func (x *SuggestedSection) GetVerifyAnswerPrompt() string {
	if x != nil {
		return x.VerifyAnswerPrompt
	}
	return ""
}

type SuggestSectionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Suggestions   []*SuggestedSection    `protobuf:"bytes,1,rep,name=suggestions,proto3" json:"suggestions,omitempty"` // List of suggestions
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuggestSectionsResponse) Reset() {
	*x = SuggestSectionsResponse{}
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestSectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestSectionsResponse) ProtoMessage() {}

func (x *SuggestSectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestSectionsResponse.ProtoReflect.Descriptor instead.
func (*SuggestSectionsResponse) Descriptor() ([]byte, []int) {
	return file_leetcoach_v1_llm_service_proto_rawDescGZIP(), []int{4}
}

func (x *SuggestSectionsResponse) GetSuggestions() []*SuggestedSection {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

type GenerateTextContentRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	DesignId  string                 `protobuf:"bytes,1,opt,name=design_id,json=designId,proto3" json:"design_id,omitempty"`
	SectionId string                 `protobuf:"bytes,2,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	// Optional: Provide a specific prompt or template identifier.
	// If empty, the service might use a default based on the section title.
	PromptOverride string `protobuf:"bytes,3,opt,name=prompt_override,json=promptOverride,proto3" json:"prompt_override,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GenerateTextContentRequest) Reset() {
	*x = GenerateTextContentRequest{}
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateTextContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTextContentRequest) ProtoMessage() {}

func (x *GenerateTextContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTextContentRequest.ProtoReflect.Descriptor instead.
func (*GenerateTextContentRequest) Descriptor() ([]byte, []int) {
	return file_leetcoach_v1_llm_service_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateTextContentRequest) GetDesignId() string {
	if x != nil {
		return x.DesignId
	}
	return ""
}

func (x *GenerateTextContentRequest) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *GenerateTextContentRequest) GetPromptOverride() string {
	if x != nil {
		return x.PromptOverride
	}
	return ""
}

type GenerateTextContentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GeneratedText string                 `protobuf:"bytes,1,opt,name=generated_text,json=generatedText,proto3" json:"generated_text,omitempty"` // The generated text content (likely HTML or Markdown)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateTextContentResponse) Reset() {
	*x = GenerateTextContentResponse{}
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateTextContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTextContentResponse) ProtoMessage() {}

func (x *GenerateTextContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTextContentResponse.ProtoReflect.Descriptor instead.
func (*GenerateTextContentResponse) Descriptor() ([]byte, []int) {
	return file_leetcoach_v1_llm_service_proto_rawDescGZIP(), []int{6}
}

func (x *GenerateTextContentResponse) GetGeneratedText() string {
	if x != nil {
		return x.GeneratedText
	}
	return ""
}

type ReviewTextContentRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	DesignId  string                 `protobuf:"bytes,1,opt,name=design_id,json=designId,proto3" json:"design_id,omitempty"`
	SectionId string                 `protobuf:"bytes,2,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	// Optional: Flags for review focus
	// map<string, bool> options = 3;
	PromptOverride string `protobuf:"bytes,4,opt,name=prompt_override,json=promptOverride,proto3" json:"prompt_override,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReviewTextContentRequest) Reset() {
	*x = ReviewTextContentRequest{}
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewTextContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewTextContentRequest) ProtoMessage() {}

func (x *ReviewTextContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewTextContentRequest.ProtoReflect.Descriptor instead.
func (*ReviewTextContentRequest) Descriptor() ([]byte, []int) {
	return file_leetcoach_v1_llm_service_proto_rawDescGZIP(), []int{7}
}

func (x *ReviewTextContentRequest) GetDesignId() string {
	if x != nil {
		return x.DesignId
	}
	return ""
}

func (x *ReviewTextContentRequest) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *ReviewTextContentRequest) GetPromptOverride() string {
	if x != nil {
		return x.PromptOverride
	}
	return ""
}

type ReviewTextContentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewText    string                 `protobuf:"bytes,1,opt,name=review_text,json=reviewText,proto3" json:"review_text,omitempty"` // The LLM's review/critique comments
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewTextContentResponse) Reset() {
	*x = ReviewTextContentResponse{}
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewTextContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewTextContentResponse) ProtoMessage() {}

func (x *ReviewTextContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewTextContentResponse.ProtoReflect.Descriptor instead.
func (*ReviewTextContentResponse) Descriptor() ([]byte, []int) {
	return file_leetcoach_v1_llm_service_proto_rawDescGZIP(), []int{8}
}

func (x *ReviewTextContentResponse) GetReviewText() string {
	if x != nil {
		return x.ReviewText
	}
	return ""
}

type GenerateDefaultPromptsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DesignId      string                 `protobuf:"bytes,1,opt,name=design_id,json=designId,proto3" json:"design_id,omitempty"`
	SectionId     string                 `protobuf:"bytes,2,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateDefaultPromptsRequest) Reset() {
	*x = GenerateDefaultPromptsRequest{}
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateDefaultPromptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateDefaultPromptsRequest) ProtoMessage() {}

func (x *GenerateDefaultPromptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateDefaultPromptsRequest.ProtoReflect.Descriptor instead.
func (*GenerateDefaultPromptsRequest) Descriptor() ([]byte, []int) {
	return file_leetcoach_v1_llm_service_proto_rawDescGZIP(), []int{9}
}

func (x *GenerateDefaultPromptsRequest) GetDesignId() string {
	if x != nil {
		return x.DesignId
	}
	return ""
}

func (x *GenerateDefaultPromptsRequest) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

type GenerateDefaultPromptsResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	GetAnswerPrompt    string                 `protobuf:"bytes,1,opt,name=get_answer_prompt,json=getAnswerPrompt,proto3" json:"get_answer_prompt,omitempty"`          // The default prompt generated and saved for getting answers.
	VerifyAnswerPrompt string                 `protobuf:"bytes,2,opt,name=verify_answer_prompt,json=verifyAnswerPrompt,proto3" json:"verify_answer_prompt,omitempty"` // The default prompt generated and saved for verification.
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GenerateDefaultPromptsResponse) Reset() {
	*x = GenerateDefaultPromptsResponse{}
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateDefaultPromptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateDefaultPromptsResponse) ProtoMessage() {}

func (x *GenerateDefaultPromptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leetcoach_v1_llm_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateDefaultPromptsResponse.ProtoReflect.Descriptor instead.
func (*GenerateDefaultPromptsResponse) Descriptor() ([]byte, []int) {
	return file_leetcoach_v1_llm_service_proto_rawDescGZIP(), []int{10}
}

func (x *GenerateDefaultPromptsResponse) GetGetAnswerPrompt() string {
	if x != nil {
		return x.GetAnswerPrompt
	}
	return ""
}

func (x *GenerateDefaultPromptsResponse) GetVerifyAnswerPrompt() string {
	if x != nil {
		return x.VerifyAnswerPrompt
	}
	return ""
}

var File_leetcoach_v1_llm_service_proto protoreflect.FileDescriptor

var file_leetcoach_v1_llm_service_proto_rawDesc = string([]byte{
	0x0a, 0x1e, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x6c,
	0x6c, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x15, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x6c, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x22, 0x3d, 0x0a, 0x16, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x4c, 0x6c, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x65, 0x78, 0x74, 0x22, 0x6d, 0x0a, 0x16, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a,
	0x17, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x22, 0x5b, 0x0a, 0x17, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61, 0x63, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x81, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0x44, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x22, 0x7f, 0x0a, 0x18, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0x3c, 0x0a, 0x19,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x74, 0x22, 0x5b, 0x0a, 0x1d, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x1e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x65, 0x74,
	0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x32, 0xc4, 0x06, 0x0a, 0x0a, 0x4c, 0x6c, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x0e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x4c, 0x6c, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x6c, 0x65, 0x65, 0x74, 0x63,
	0x6f, 0x61, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x6c,
	0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x4c, 0x6c, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d,
	0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6c, 0x6d, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x93, 0x01,
	0x0a, 0x0f, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x24, 0x2e, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f,
	0x61, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x12, 0xb2, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x6c, 0x65,
	0x65, 0x74, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61, 0x63,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x3a, 0x01, 0x2a, 0x22, 0x3b, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x3a,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0xaa, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x26,
	0x2e, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61,
	0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e, 0x3a, 0x01, 0x2a, 0x22, 0x39, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x3a, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0xc6, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73,
	0x12, 0x2b, 0x2e, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x4b, 0x3a, 0x01, 0x2a, 0x22, 0x46, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x3a, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x91,
	0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61, 0x63, 0x68,
	0x2e, 0x76, 0x31, 0x42, 0x0f, 0x4c, 0x6c, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0xa2, 0x02, 0x03, 0x4c, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x4c, 0x65, 0x65, 0x74,
	0x63, 0x6f, 0x61, 0x63, 0x68, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x4c, 0x65, 0x65, 0x74, 0x63,
	0x6f, 0x61, 0x63, 0x68, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18, 0x4c, 0x65, 0x65, 0x74, 0x63, 0x6f,
	0x61, 0x63, 0x68, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x0d, 0x4c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_leetcoach_v1_llm_service_proto_rawDescOnce sync.Once
	file_leetcoach_v1_llm_service_proto_rawDescData []byte
)

func file_leetcoach_v1_llm_service_proto_rawDescGZIP() []byte {
	file_leetcoach_v1_llm_service_proto_rawDescOnce.Do(func() {
		file_leetcoach_v1_llm_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_leetcoach_v1_llm_service_proto_rawDesc), len(file_leetcoach_v1_llm_service_proto_rawDesc)))
	})
	return file_leetcoach_v1_llm_service_proto_rawDescData
}

var file_leetcoach_v1_llm_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_leetcoach_v1_llm_service_proto_goTypes = []any{
	(*SimpleLlmQueryRequest)(nil),          // 0: leetcoach.v1.SimpleLlmQueryRequest
	(*SimpleLlmQueryResponse)(nil),         // 1: leetcoach.v1.SimpleLlmQueryResponse
	(*SuggestSectionsRequest)(nil),         // 2: leetcoach.v1.SuggestSectionsRequest
	(*SuggestedSection)(nil),               // 3: leetcoach.v1.SuggestedSection
	(*SuggestSectionsResponse)(nil),        // 4: leetcoach.v1.SuggestSectionsResponse
	(*GenerateTextContentRequest)(nil),     // 5: leetcoach.v1.GenerateTextContentRequest
	(*GenerateTextContentResponse)(nil),    // 6: leetcoach.v1.GenerateTextContentResponse
	(*ReviewTextContentRequest)(nil),       // 7: leetcoach.v1.ReviewTextContentRequest
	(*ReviewTextContentResponse)(nil),      // 8: leetcoach.v1.ReviewTextContentResponse
	(*GenerateDefaultPromptsRequest)(nil),  // 9: leetcoach.v1.GenerateDefaultPromptsRequest
	(*GenerateDefaultPromptsResponse)(nil), // 10: leetcoach.v1.GenerateDefaultPromptsResponse
}
var file_leetcoach_v1_llm_service_proto_depIdxs = []int32{
	3,  // 0: leetcoach.v1.SuggestSectionsResponse.suggestions:type_name -> leetcoach.v1.SuggestedSection
	0,  // 1: leetcoach.v1.LlmService.SimpleLlmQuery:input_type -> leetcoach.v1.SimpleLlmQueryRequest
	2,  // 2: leetcoach.v1.LlmService.SuggestSections:input_type -> leetcoach.v1.SuggestSectionsRequest
	5,  // 3: leetcoach.v1.LlmService.GenerateTextContent:input_type -> leetcoach.v1.GenerateTextContentRequest
	7,  // 4: leetcoach.v1.LlmService.ReviewTextContent:input_type -> leetcoach.v1.ReviewTextContentRequest
	9,  // 5: leetcoach.v1.LlmService.GenerateDefaultPrompts:input_type -> leetcoach.v1.GenerateDefaultPromptsRequest
	1,  // 6: leetcoach.v1.LlmService.SimpleLlmQuery:output_type -> leetcoach.v1.SimpleLlmQueryResponse
	4,  // 7: leetcoach.v1.LlmService.SuggestSections:output_type -> leetcoach.v1.SuggestSectionsResponse
	6,  // 8: leetcoach.v1.LlmService.GenerateTextContent:output_type -> leetcoach.v1.GenerateTextContentResponse
	8,  // 9: leetcoach.v1.LlmService.ReviewTextContent:output_type -> leetcoach.v1.ReviewTextContentResponse
	10, // 10: leetcoach.v1.LlmService.GenerateDefaultPrompts:output_type -> leetcoach.v1.GenerateDefaultPromptsResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_leetcoach_v1_llm_service_proto_init() }
func file_leetcoach_v1_llm_service_proto_init() {
	if File_leetcoach_v1_llm_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_leetcoach_v1_llm_service_proto_rawDesc), len(file_leetcoach_v1_llm_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_leetcoach_v1_llm_service_proto_goTypes,
		DependencyIndexes: file_leetcoach_v1_llm_service_proto_depIdxs,
		MessageInfos:      file_leetcoach_v1_llm_service_proto_msgTypes,
	}.Build()
	File_leetcoach_v1_llm_service_proto = out.File
	file_leetcoach_v1_llm_service_proto_goTypes = nil
	file_leetcoach_v1_llm_service_proto_depIdxs = nil
}
