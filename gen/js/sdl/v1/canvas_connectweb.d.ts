// protos/sdl/v1/canvas.proto

// @generated by protoc-gen-connect-web v0.8.6
// @generated from file sdl/v1/canvas.proto (package sdl.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddGeneratorRequest, AddGeneratorResponse, CreateCanvasRequest, CreateCanvasResponse, DeleteCanvasRequest, DeleteCanvasResponse, DeleteGeneratorRequest, DeleteGeneratorResponse, GetCanvasRequest, GetCanvasResponse, GetGeneratorRequest, GetGeneratorResponse, ListCanvasesRequest, ListCanvasesResponse, LoadFileRequest, LoadFileResponse, PauseGeneratorRequest, PauseGeneratorResponse, ResumeGeneratorRequest, ResumeGeneratorResponse, StartAllGeneratorsRequest, StartAllGeneratorsResponse, StopAllGeneratorsRequest, StopAllGeneratorsResponse, UpdateGeneratorRequest, UpdateGeneratorResponse, UseSystemRequest, UseSystemResponse } from "./canvas_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * *
 * Service for interacting with a canvas.
 *
 * @generated from service sdl.v1.CanvasService
 */
export declare const CanvasService: {
  readonly typeName: "sdl.v1.CanvasService",
  readonly methods: {
    /**
     * *
     * Create a new canvas sesssion.
     *
     * @generated from rpc sdl.v1.CanvasService.CreateCanvas
     */
    readonly createCanvas: {
      readonly name: "CreateCanvas",
      readonly I: typeof CreateCanvasRequest,
      readonly O: typeof CreateCanvasResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * *
     * List all canvases from a user.
     *
     * @generated from rpc sdl.v1.CanvasService.ListCanvases
     */
    readonly listCanvases: {
      readonly name: "ListCanvases",
      readonly I: typeof ListCanvasesRequest,
      readonly O: typeof ListCanvasesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * *
     * Get details/stats for a particular canvas
     *
     * @generated from rpc sdl.v1.CanvasService.GetCanvas
     */
    readonly getCanvas: {
      readonly name: "GetCanvas",
      readonly I: typeof GetCanvasRequest,
      readonly O: typeof GetCanvasResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc sdl.v1.CanvasService.LoadFile
     */
    readonly loadFile: {
      readonly name: "LoadFile",
      readonly I: typeof LoadFileRequest,
      readonly O: typeof LoadFileResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc sdl.v1.CanvasService.UseSystem
     */
    readonly useSystem: {
      readonly name: "UseSystem",
      readonly I: typeof UseSystemRequest,
      readonly O: typeof UseSystemResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * *
     * Delete a particular canvas.  Frees up resources used by it and all the connections
     *
     * @generated from rpc sdl.v1.CanvasService.DeleteCanvas
     */
    readonly deleteCanvas: {
      readonly name: "DeleteCanvas",
      readonly I: typeof DeleteCanvasRequest,
      readonly O: typeof DeleteCanvasResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     *  ----- Generator Operations -----
     * Adds a generator to a canvas's generator_ids list and creates the generator resource.
     *
     * @generated from rpc sdl.v1.CanvasService.AddGenerator
     */
    readonly addGenerator: {
      readonly name: "AddGenerator",
      readonly I: typeof AddGeneratorRequest,
      readonly O: typeof AddGeneratorResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Request to start all generators
     *
     * @generated from rpc sdl.v1.CanvasService.StartAllGenerators
     */
    readonly startAllGenerators: {
      readonly name: "StartAllGenerators",
      readonly I: typeof StartAllGeneratorsRequest,
      readonly O: typeof StartAllGeneratorsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Request to start all generators
     *
     * @generated from rpc sdl.v1.CanvasService.StopAllGenerators
     */
    readonly stopAllGenerators: {
      readonly name: "StopAllGenerators",
      readonly I: typeof StopAllGeneratorsRequest,
      readonly O: typeof StopAllGeneratorsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc sdl.v1.CanvasService.GetGenerator
     */
    readonly getGenerator: {
      readonly name: "GetGenerator",
      readonly I: typeof GetGeneratorRequest,
      readonly O: typeof GetGeneratorResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Use PATCH for partial updates to a generator (title, content)
     *
     * @generated from rpc sdl.v1.CanvasService.UpdateGenerator
     */
    readonly updateGenerator: {
      readonly name: "UpdateGenerator",
      readonly I: typeof UpdateGeneratorRequest,
      readonly O: typeof UpdateGeneratorResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc sdl.v1.CanvasService.PauseGenerator
     */
    readonly pauseGenerator: {
      readonly name: "PauseGenerator",
      readonly I: typeof PauseGeneratorRequest,
      readonly O: typeof PauseGeneratorResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc sdl.v1.CanvasService.ResumeGenerator
     */
    readonly resumeGenerator: {
      readonly name: "ResumeGenerator",
      readonly I: typeof ResumeGeneratorRequest,
      readonly O: typeof ResumeGeneratorResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc sdl.v1.CanvasService.DeleteGenerator
     */
    readonly deleteGenerator: {
      readonly name: "DeleteGenerator",
      readonly I: typeof DeleteGeneratorRequest,
      readonly O: typeof DeleteGeneratorResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

