// protos/sdl/v1/canvas.proto

// @generated by protoc-gen-es v2.5.2
// @generated from file sdl/v1/canvas.proto (package sdl.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Canvas, Generator, Metric, Pagination, PaginationResponse } from "./models_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file sdl/v1/canvas.proto.
 */
export declare const file_sdl_v1_canvas: GenFile;

/**
 * *
 * Canvas creation request object
 *
 * @generated from message sdl.v1.CreateCanvasRequest
 */
export declare type CreateCanvasRequest = Message<"sdl.v1.CreateCanvasRequest"> & {
  /**
   * *
   * Canvas being updated
   *
   * @generated from field: sdl.v1.Canvas canvas = 1;
   */
  canvas?: Canvas;
};

/**
 * Describes the message sdl.v1.CreateCanvasRequest.
 * Use `create(CreateCanvasRequestSchema)` to create a new message.
 */
export declare const CreateCanvasRequestSchema: GenMessage<CreateCanvasRequest>;

/**
 * *
 * Response of an canvas creation.
 *
 * @generated from message sdl.v1.CreateCanvasResponse
 */
export declare type CreateCanvasResponse = Message<"sdl.v1.CreateCanvasResponse"> & {
  /**
   * *
   * Canvas being created
   *
   * @generated from field: sdl.v1.Canvas canvas = 1;
   */
  canvas?: Canvas;

  /**
   * *
   * Error specific to a field if there are any errors.
   *
   * @generated from field: map<string, string> field_errors = 2;
   */
  fieldErrors: { [key: string]: string };
};

/**
 * Describes the message sdl.v1.CreateCanvasResponse.
 * Use `create(CreateCanvasResponseSchema)` to create a new message.
 */
export declare const CreateCanvasResponseSchema: GenMessage<CreateCanvasResponse>;

/**
 * *
 * An canvas search request.  For now only paginations params are provided.
 *
 * @generated from message sdl.v1.ListCanvasesRequest
 */
export declare type ListCanvasesRequest = Message<"sdl.v1.ListCanvasesRequest"> & {
  /**
   * Pagination info
   *
   * @generated from field: sdl.v1.Pagination pagination = 1;
   */
  pagination?: Pagination;
};

/**
 * Describes the message sdl.v1.ListCanvasesRequest.
 * Use `create(ListCanvasesRequestSchema)` to create a new message.
 */
export declare const ListCanvasesRequestSchema: GenMessage<ListCanvasesRequest>;

/**
 * *
 * Response of a canvas search/listing.
 *
 * @generated from message sdl.v1.ListCanvasesResponse
 */
export declare type ListCanvasesResponse = Message<"sdl.v1.ListCanvasesResponse"> & {
  /**
   * *
   * The list of canvases found as part of this response.
   *
   * @generated from field: repeated sdl.v1.Canvas canvases = 1;
   */
  canvases: Canvas[];

  /**
   * @generated from field: sdl.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message sdl.v1.ListCanvasesResponse.
 * Use `create(ListCanvasesResponseSchema)` to create a new message.
 */
export declare const ListCanvasesResponseSchema: GenMessage<ListCanvasesResponse>;

/**
 * *
 * Request to get a canvas.
 *
 * @generated from message sdl.v1.GetCanvasRequest
 */
export declare type GetCanvasRequest = Message<"sdl.v1.GetCanvasRequest"> & {
  /**
   * *
   * ID of the canvas to be fetched
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message sdl.v1.GetCanvasRequest.
 * Use `create(GetCanvasRequestSchema)` to create a new message.
 */
export declare const GetCanvasRequestSchema: GenMessage<GetCanvasRequest>;

/**
 * *
 * Canvas get response
 *
 * @generated from message sdl.v1.GetCanvasResponse
 */
export declare type GetCanvasResponse = Message<"sdl.v1.GetCanvasResponse"> & {
  /**
   * @generated from field: sdl.v1.Canvas canvas = 1;
   */
  canvas?: Canvas;
};

/**
 * Describes the message sdl.v1.GetCanvasResponse.
 * Use `create(GetCanvasResponseSchema)` to create a new message.
 */
export declare const GetCanvasResponseSchema: GenMessage<GetCanvasResponse>;

/**
 * *
 * Request to delete an canvas.
 *
 * @generated from message sdl.v1.DeleteCanvasRequest
 */
export declare type DeleteCanvasRequest = Message<"sdl.v1.DeleteCanvasRequest"> & {
  /**
   * *
   * ID of the canvas to be deleted.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message sdl.v1.DeleteCanvasRequest.
 * Use `create(DeleteCanvasRequestSchema)` to create a new message.
 */
export declare const DeleteCanvasRequestSchema: GenMessage<DeleteCanvasRequest>;

/**
 * *
 * Canvas deletion response
 *
 * @generated from message sdl.v1.DeleteCanvasResponse
 */
export declare type DeleteCanvasResponse = Message<"sdl.v1.DeleteCanvasResponse"> & {
};

/**
 * Describes the message sdl.v1.DeleteCanvasResponse.
 * Use `create(DeleteCanvasResponseSchema)` to create a new message.
 */
export declare const DeleteCanvasResponseSchema: GenMessage<DeleteCanvasResponse>;

/**
 * @generated from message sdl.v1.AddGeneratorRequest
 */
export declare type AddGeneratorRequest = Message<"sdl.v1.AddGeneratorRequest"> & {
  /**
   * @generated from field: sdl.v1.Generator generator = 1;
   */
  generator?: Generator;
};

/**
 * Describes the message sdl.v1.AddGeneratorRequest.
 * Use `create(AddGeneratorRequestSchema)` to create a new message.
 */
export declare const AddGeneratorRequestSchema: GenMessage<AddGeneratorRequest>;

/**
 * @generated from message sdl.v1.AddGeneratorResponse
 */
export declare type AddGeneratorResponse = Message<"sdl.v1.AddGeneratorResponse"> & {
  /**
   * @generated from field: sdl.v1.Generator generator = 1;
   */
  generator?: Generator;
};

/**
 * Describes the message sdl.v1.AddGeneratorResponse.
 * Use `create(AddGeneratorResponseSchema)` to create a new message.
 */
export declare const AddGeneratorResponseSchema: GenMessage<AddGeneratorResponse>;

/**
 * @generated from message sdl.v1.StartAllGeneratorsRequest
 */
export declare type StartAllGeneratorsRequest = Message<"sdl.v1.StartAllGeneratorsRequest"> & {
  /**
   * @generated from field: string canvas_id = 1;
   */
  canvasId: string;
};

/**
 * Describes the message sdl.v1.StartAllGeneratorsRequest.
 * Use `create(StartAllGeneratorsRequestSchema)` to create a new message.
 */
export declare const StartAllGeneratorsRequestSchema: GenMessage<StartAllGeneratorsRequest>;

/**
 * @generated from message sdl.v1.StartAllGeneratorsResponse
 */
export declare type StartAllGeneratorsResponse = Message<"sdl.v1.StartAllGeneratorsResponse"> & {
};

/**
 * Describes the message sdl.v1.StartAllGeneratorsResponse.
 * Use `create(StartAllGeneratorsResponseSchema)` to create a new message.
 */
export declare const StartAllGeneratorsResponseSchema: GenMessage<StartAllGeneratorsResponse>;

/**
 * @generated from message sdl.v1.StopAllGeneratorsRequest
 */
export declare type StopAllGeneratorsRequest = Message<"sdl.v1.StopAllGeneratorsRequest"> & {
  /**
   * @generated from field: string canvas_id = 1;
   */
  canvasId: string;
};

/**
 * Describes the message sdl.v1.StopAllGeneratorsRequest.
 * Use `create(StopAllGeneratorsRequestSchema)` to create a new message.
 */
export declare const StopAllGeneratorsRequestSchema: GenMessage<StopAllGeneratorsRequest>;

/**
 * @generated from message sdl.v1.StopAllGeneratorsResponse
 */
export declare type StopAllGeneratorsResponse = Message<"sdl.v1.StopAllGeneratorsResponse"> & {
};

/**
 * Describes the message sdl.v1.StopAllGeneratorsResponse.
 * Use `create(StopAllGeneratorsResponseSchema)` to create a new message.
 */
export declare const StopAllGeneratorsResponseSchema: GenMessage<StopAllGeneratorsResponse>;

/**
 * @generated from message sdl.v1.GetGeneratorRequest
 */
export declare type GetGeneratorRequest = Message<"sdl.v1.GetGeneratorRequest"> & {
  /**
   * @generated from field: string canvas_id = 1;
   */
  canvasId: string;

  /**
   * @generated from field: string generator_id = 2;
   */
  generatorId: string;
};

/**
 * Describes the message sdl.v1.GetGeneratorRequest.
 * Use `create(GetGeneratorRequestSchema)` to create a new message.
 */
export declare const GetGeneratorRequestSchema: GenMessage<GetGeneratorRequest>;

/**
 * @generated from message sdl.v1.GetGeneratorResponse
 */
export declare type GetGeneratorResponse = Message<"sdl.v1.GetGeneratorResponse"> & {
  /**
   * @generated from field: sdl.v1.Generator generator = 1;
   */
  generator?: Generator;
};

/**
 * Describes the message sdl.v1.GetGeneratorResponse.
 * Use `create(GetGeneratorResponseSchema)` to create a new message.
 */
export declare const GetGeneratorResponseSchema: GenMessage<GetGeneratorResponse>;

/**
 * Consolidate generator updates into one RPC using PATCH and FieldMask
 *
 * @generated from message sdl.v1.UpdateGeneratorRequest
 */
export declare type UpdateGeneratorRequest = Message<"sdl.v1.UpdateGeneratorRequest"> & {
  /**
   * Generator object containing *only* the fields to be updated.
   * The server will use the update_mask to know which fields from
   * this 'generator' message to apply to the stored generator.
   *
   * @generated from field: sdl.v1.Generator generator = 1;
   */
  generator?: Generator;

  /**
   * e.g., paths: "title", paths: "text_content"
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message sdl.v1.UpdateGeneratorRequest.
 * Use `create(UpdateGeneratorRequestSchema)` to create a new message.
 */
export declare const UpdateGeneratorRequestSchema: GenMessage<UpdateGeneratorRequest>;

/**
 * @generated from message sdl.v1.UpdateGeneratorResponse
 */
export declare type UpdateGeneratorResponse = Message<"sdl.v1.UpdateGeneratorResponse"> & {
  /**
   * @generated from field: sdl.v1.Generator generator = 1;
   */
  generator?: Generator;
};

/**
 * Describes the message sdl.v1.UpdateGeneratorResponse.
 * Use `create(UpdateGeneratorResponseSchema)` to create a new message.
 */
export declare const UpdateGeneratorResponseSchema: GenMessage<UpdateGeneratorResponse>;

/**
 * @generated from message sdl.v1.ResumeGeneratorRequest
 */
export declare type ResumeGeneratorRequest = Message<"sdl.v1.ResumeGeneratorRequest"> & {
  /**
   * @generated from field: string canvas_id = 1;
   */
  canvasId: string;

  /**
   * The generator being moved
   *
   * @generated from field: string generator_id = 2;
   */
  generatorId: string;
};

/**
 * Describes the message sdl.v1.ResumeGeneratorRequest.
 * Use `create(ResumeGeneratorRequestSchema)` to create a new message.
 */
export declare const ResumeGeneratorRequestSchema: GenMessage<ResumeGeneratorRequest>;

/**
 * @generated from message sdl.v1.ResumeGeneratorResponse
 */
export declare type ResumeGeneratorResponse = Message<"sdl.v1.ResumeGeneratorResponse"> & {
};

/**
 * Describes the message sdl.v1.ResumeGeneratorResponse.
 * Use `create(ResumeGeneratorResponseSchema)` to create a new message.
 */
export declare const ResumeGeneratorResponseSchema: GenMessage<ResumeGeneratorResponse>;

/**
 * @generated from message sdl.v1.PauseGeneratorRequest
 */
export declare type PauseGeneratorRequest = Message<"sdl.v1.PauseGeneratorRequest"> & {
  /**
   * @generated from field: string canvas_id = 1;
   */
  canvasId: string;

  /**
   * The generator being moved
   *
   * @generated from field: string generator_id = 2;
   */
  generatorId: string;
};

/**
 * Describes the message sdl.v1.PauseGeneratorRequest.
 * Use `create(PauseGeneratorRequestSchema)` to create a new message.
 */
export declare const PauseGeneratorRequestSchema: GenMessage<PauseGeneratorRequest>;

/**
 * @generated from message sdl.v1.PauseGeneratorResponse
 */
export declare type PauseGeneratorResponse = Message<"sdl.v1.PauseGeneratorResponse"> & {
};

/**
 * Describes the message sdl.v1.PauseGeneratorResponse.
 * Use `create(PauseGeneratorResponseSchema)` to create a new message.
 */
export declare const PauseGeneratorResponseSchema: GenMessage<PauseGeneratorResponse>;

/**
 * @generated from message sdl.v1.DeleteGeneratorRequest
 */
export declare type DeleteGeneratorRequest = Message<"sdl.v1.DeleteGeneratorRequest"> & {
  /**
   * @generated from field: string canvas_id = 1;
   */
  canvasId: string;

  /**
   * @generated from field: string generator_id = 2;
   */
  generatorId: string;
};

/**
 * Describes the message sdl.v1.DeleteGeneratorRequest.
 * Use `create(DeleteGeneratorRequestSchema)` to create a new message.
 */
export declare const DeleteGeneratorRequestSchema: GenMessage<DeleteGeneratorRequest>;

/**
 * @generated from message sdl.v1.DeleteGeneratorResponse
 */
export declare type DeleteGeneratorResponse = Message<"sdl.v1.DeleteGeneratorResponse"> & {
};

/**
 * Describes the message sdl.v1.DeleteGeneratorResponse.
 * Use `create(DeleteGeneratorResponseSchema)` to create a new message.
 */
export declare const DeleteGeneratorResponseSchema: GenMessage<DeleteGeneratorResponse>;

/**
 * @generated from message sdl.v1.LoadFileRequest
 */
export declare type LoadFileRequest = Message<"sdl.v1.LoadFileRequest"> & {
  /**
   * @generated from field: string canvas_id = 1;
   */
  canvasId: string;

  /**
   * @generated from field: string sdl_file_path = 2;
   */
  sdlFilePath: string;
};

/**
 * Describes the message sdl.v1.LoadFileRequest.
 * Use `create(LoadFileRequestSchema)` to create a new message.
 */
export declare const LoadFileRequestSchema: GenMessage<LoadFileRequest>;

/**
 * @generated from message sdl.v1.LoadFileResponse
 */
export declare type LoadFileResponse = Message<"sdl.v1.LoadFileResponse"> & {
};

/**
 * Describes the message sdl.v1.LoadFileResponse.
 * Use `create(LoadFileResponseSchema)` to create a new message.
 */
export declare const LoadFileResponseSchema: GenMessage<LoadFileResponse>;

/**
 * @generated from message sdl.v1.UseSystemRequest
 */
export declare type UseSystemRequest = Message<"sdl.v1.UseSystemRequest"> & {
  /**
   * @generated from field: string canvas_id = 1;
   */
  canvasId: string;

  /**
   * @generated from field: string system_name = 2;
   */
  systemName: string;
};

/**
 * Describes the message sdl.v1.UseSystemRequest.
 * Use `create(UseSystemRequestSchema)` to create a new message.
 */
export declare const UseSystemRequestSchema: GenMessage<UseSystemRequest>;

/**
 * @generated from message sdl.v1.UseSystemResponse
 */
export declare type UseSystemResponse = Message<"sdl.v1.UseSystemResponse"> & {
};

/**
 * Describes the message sdl.v1.UseSystemResponse.
 * Use `create(UseSystemResponseSchema)` to create a new message.
 */
export declare const UseSystemResponseSchema: GenMessage<UseSystemResponse>;

/**
 * @generated from message sdl.v1.AddMetricRequest
 */
export declare type AddMetricRequest = Message<"sdl.v1.AddMetricRequest"> & {
  /**
   * @generated from field: sdl.v1.Metric metric = 1;
   */
  metric?: Metric;
};

/**
 * Describes the message sdl.v1.AddMetricRequest.
 * Use `create(AddMetricRequestSchema)` to create a new message.
 */
export declare const AddMetricRequestSchema: GenMessage<AddMetricRequest>;

/**
 * @generated from message sdl.v1.AddMetricResponse
 */
export declare type AddMetricResponse = Message<"sdl.v1.AddMetricResponse"> & {
  /**
   * @generated from field: sdl.v1.Metric metric = 1;
   */
  metric?: Metric;
};

/**
 * Describes the message sdl.v1.AddMetricResponse.
 * Use `create(AddMetricResponseSchema)` to create a new message.
 */
export declare const AddMetricResponseSchema: GenMessage<AddMetricResponse>;

/**
 * @generated from message sdl.v1.DeleteMetricRequest
 */
export declare type DeleteMetricRequest = Message<"sdl.v1.DeleteMetricRequest"> & {
  /**
   * @generated from field: string canvas_id = 1;
   */
  canvasId: string;

  /**
   * @generated from field: string metric_id = 2;
   */
  metricId: string;
};

/**
 * Describes the message sdl.v1.DeleteMetricRequest.
 * Use `create(DeleteMetricRequestSchema)` to create a new message.
 */
export declare const DeleteMetricRequestSchema: GenMessage<DeleteMetricRequest>;

/**
 * @generated from message sdl.v1.DeleteMetricResponse
 */
export declare type DeleteMetricResponse = Message<"sdl.v1.DeleteMetricResponse"> & {
};

/**
 * Describes the message sdl.v1.DeleteMetricResponse.
 * Use `create(DeleteMetricResponseSchema)` to create a new message.
 */
export declare const DeleteMetricResponseSchema: GenMessage<DeleteMetricResponse>;

/**
 * @generated from message sdl.v1.LiveMetricsRequest
 */
export declare type LiveMetricsRequest = Message<"sdl.v1.LiveMetricsRequest"> & {
  /**
   * @generated from field: string canvas_id = 1;
   */
  canvasId: string;
};

/**
 * Describes the message sdl.v1.LiveMetricsRequest.
 * Use `create(LiveMetricsRequestSchema)` to create a new message.
 */
export declare const LiveMetricsRequestSchema: GenMessage<LiveMetricsRequest>;

/**
 * @generated from message sdl.v1.LiveMetricsResponse
 */
export declare type LiveMetricsResponse = Message<"sdl.v1.LiveMetricsResponse"> & {
};

/**
 * Describes the message sdl.v1.LiveMetricsResponse.
 * Use `create(LiveMetricsResponseSchema)` to create a new message.
 */
export declare const LiveMetricsResponseSchema: GenMessage<LiveMetricsResponse>;

/**
 * *
 * Service for interacting with a canvas.
 *
 * @generated from service sdl.v1.CanvasService
 */
export declare const CanvasService: GenService<{
  /**
   * *
   * Create a new canvas sesssion.
   *
   * @generated from rpc sdl.v1.CanvasService.CreateCanvas
   */
  createCanvas: {
    methodKind: "unary";
    input: typeof CreateCanvasRequestSchema;
    output: typeof CreateCanvasResponseSchema;
  },
  /**
   * *
   * List all canvases from a user.
   *
   * @generated from rpc sdl.v1.CanvasService.ListCanvases
   */
  listCanvases: {
    methodKind: "unary";
    input: typeof ListCanvasesRequestSchema;
    output: typeof ListCanvasesResponseSchema;
  },
  /**
   * *
   * Get details/stats for a particular canvas
   *
   * @generated from rpc sdl.v1.CanvasService.GetCanvas
   */
  getCanvas: {
    methodKind: "unary";
    input: typeof GetCanvasRequestSchema;
    output: typeof GetCanvasResponseSchema;
  },
  /**
   * @generated from rpc sdl.v1.CanvasService.LoadFile
   */
  loadFile: {
    methodKind: "unary";
    input: typeof LoadFileRequestSchema;
    output: typeof LoadFileResponseSchema;
  },
  /**
   * @generated from rpc sdl.v1.CanvasService.UseSystem
   */
  useSystem: {
    methodKind: "unary";
    input: typeof UseSystemRequestSchema;
    output: typeof UseSystemResponseSchema;
  },
  /**
   * *
   * Delete a particular canvas.  Frees up resources used by it and all the connections
   *
   * @generated from rpc sdl.v1.CanvasService.DeleteCanvas
   */
  deleteCanvas: {
    methodKind: "unary";
    input: typeof DeleteCanvasRequestSchema;
    output: typeof DeleteCanvasResponseSchema;
  },
  /**
   *  ----- Generator Operations -----
   * Adds a generator to a canvas's generator_ids list and creates the generator resource.
   *
   * @generated from rpc sdl.v1.CanvasService.AddGenerator
   */
  addGenerator: {
    methodKind: "unary";
    input: typeof AddGeneratorRequestSchema;
    output: typeof AddGeneratorResponseSchema;
  },
  /**
   * Request to start all generators
   *
   * @generated from rpc sdl.v1.CanvasService.StartAllGenerators
   */
  startAllGenerators: {
    methodKind: "unary";
    input: typeof StartAllGeneratorsRequestSchema;
    output: typeof StartAllGeneratorsResponseSchema;
  },
  /**
   * Request to start all generators
   *
   * @generated from rpc sdl.v1.CanvasService.StopAllGenerators
   */
  stopAllGenerators: {
    methodKind: "unary";
    input: typeof StopAllGeneratorsRequestSchema;
    output: typeof StopAllGeneratorsResponseSchema;
  },
  /**
   * @generated from rpc sdl.v1.CanvasService.GetGenerator
   */
  getGenerator: {
    methodKind: "unary";
    input: typeof GetGeneratorRequestSchema;
    output: typeof GetGeneratorResponseSchema;
  },
  /**
   * Use PATCH for partial updates to a generator (title, content)
   *
   * @generated from rpc sdl.v1.CanvasService.UpdateGenerator
   */
  updateGenerator: {
    methodKind: "unary";
    input: typeof UpdateGeneratorRequestSchema;
    output: typeof UpdateGeneratorResponseSchema;
  },
  /**
   * @generated from rpc sdl.v1.CanvasService.PauseGenerator
   */
  pauseGenerator: {
    methodKind: "unary";
    input: typeof PauseGeneratorRequestSchema;
    output: typeof PauseGeneratorResponseSchema;
  },
  /**
   * @generated from rpc sdl.v1.CanvasService.ResumeGenerator
   */
  resumeGenerator: {
    methodKind: "unary";
    input: typeof ResumeGeneratorRequestSchema;
    output: typeof ResumeGeneratorResponseSchema;
  },
  /**
   * @generated from rpc sdl.v1.CanvasService.DeleteGenerator
   */
  deleteGenerator: {
    methodKind: "unary";
    input: typeof DeleteGeneratorRequestSchema;
    output: typeof DeleteGeneratorResponseSchema;
  },
  /**
   *  ----- Generator Operations -----
   * Adds a metric to live plot
   *
   * @generated from rpc sdl.v1.CanvasService.AddMetric
   */
  addMetric: {
    methodKind: "unary";
    input: typeof AddMetricRequestSchema;
    output: typeof AddMetricResponseSchema;
  },
  /**
   * *
   * Delete a particular metriccanvas.  Frees up resources used by it and all the connections
   *
   * @generated from rpc sdl.v1.CanvasService.DeleteMetric
   */
  deleteMetric: {
    methodKind: "unary";
    input: typeof DeleteMetricRequestSchema;
    output: typeof DeleteMetricResponseSchema;
  },
  /**
   * @generated from rpc sdl.v1.CanvasService.LiveMetric
   */
  liveMetric: {
    methodKind: "server_streaming";
    input: typeof LiveMetricsRequestSchema;
    output: typeof LiveMetricsResponseSchema;
  },
}>;

