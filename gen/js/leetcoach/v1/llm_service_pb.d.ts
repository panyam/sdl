// FILE: ./proto/leetcoach/v1/llm_service.proto

// @generated by protoc-gen-es v2.2.5
// @generated from file leetcoach/v1/llm_service.proto (package leetcoach.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file leetcoach/v1/llm_service.proto.
 */
export declare const file_leetcoach_v1_llm_service: GenFile;

/**
 * @generated from message leetcoach.v1.SimpleLlmQueryRequest
 */
export declare type SimpleLlmQueryRequest = Message<"leetcoach.v1.SimpleLlmQueryRequest"> & {
  /**
   * Optional: Context for the query
   *
   * @generated from field: string design_id = 1;
   */
  designId: string;

  /**
   * Optional: Context for the query
   *
   * @generated from field: string section_id = 2;
   */
  sectionId: string;

  /**
   * The actual text prompt for the LLM
   *
   * @generated from field: string prompt = 3;
   */
  prompt: string;
};

/**
 * Describes the message leetcoach.v1.SimpleLlmQueryRequest.
 * Use `create(SimpleLlmQueryRequestSchema)` to create a new message.
 */
export declare const SimpleLlmQueryRequestSchema: GenMessage<SimpleLlmQueryRequest>;

/**
 * @generated from message leetcoach.v1.SimpleLlmQueryResponse
 */
export declare type SimpleLlmQueryResponse = Message<"leetcoach.v1.SimpleLlmQueryResponse"> & {
  /**
   * The text response from the LLM
   *
   * @generated from field: string response_text = 1;
   */
  responseText: string;
};

/**
 * Describes the message leetcoach.v1.SimpleLlmQueryResponse.
 * Use `create(SimpleLlmQueryResponseSchema)` to create a new message.
 */
export declare const SimpleLlmQueryResponseSchema: GenMessage<SimpleLlmQueryResponse>;

/**
 * @generated from message leetcoach.v1.SuggestSectionsRequest
 */
export declare type SuggestSectionsRequest = Message<"leetcoach.v1.SuggestSectionsRequest"> & {
  /**
   * ID of the design to provide context
   *
   * @generated from field: string design_id = 1;
   */
  designId: string;

  /**
   * List of titles already present
   *
   * @generated from field: repeated string existing_section_titles = 2;
   */
  existingSectionTitles: string[];
};

/**
 * Describes the message leetcoach.v1.SuggestSectionsRequest.
 * Use `create(SuggestSectionsRequestSchema)` to create a new message.
 */
export declare const SuggestSectionsRequestSchema: GenMessage<SuggestSectionsRequest>;

/**
 * @generated from message leetcoach.v1.SuggestedSection
 */
export declare type SuggestedSection = Message<"leetcoach.v1.SuggestedSection"> & {
  /**
   * The suggested title for the new section
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * Suggested type ("text", "drawing", "plot")
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * A brief description explaining the suggestion
   *
   * @generated from field: string description = 3;
   */
  description: string;
};

/**
 * Describes the message leetcoach.v1.SuggestedSection.
 * Use `create(SuggestedSectionSchema)` to create a new message.
 */
export declare const SuggestedSectionSchema: GenMessage<SuggestedSection>;

/**
 * @generated from message leetcoach.v1.SuggestSectionsResponse
 */
export declare type SuggestSectionsResponse = Message<"leetcoach.v1.SuggestSectionsResponse"> & {
  /**
   * List of suggestions
   *
   * @generated from field: repeated leetcoach.v1.SuggestedSection suggestions = 1;
   */
  suggestions: SuggestedSection[];
};

/**
 * Describes the message leetcoach.v1.SuggestSectionsResponse.
 * Use `create(SuggestSectionsResponseSchema)` to create a new message.
 */
export declare const SuggestSectionsResponseSchema: GenMessage<SuggestSectionsResponse>;

/**
 * @generated from message leetcoach.v1.GenerateTextContentRequest
 */
export declare type GenerateTextContentRequest = Message<"leetcoach.v1.GenerateTextContentRequest"> & {
  /**
   * @generated from field: string design_id = 1;
   */
  designId: string;

  /**
   * @generated from field: string section_id = 2;
   */
  sectionId: string;

  /**
   * Optional: Provide a specific prompt or template identifier.
   * If empty, the service might use a default based on the section title.
   *
   * Optional: Flags for generation options (e.g., include best practices)
   * map<string, bool> options = 4;
   *
   * @generated from field: string prompt_override = 3;
   */
  promptOverride: string;
};

/**
 * Describes the message leetcoach.v1.GenerateTextContentRequest.
 * Use `create(GenerateTextContentRequestSchema)` to create a new message.
 */
export declare const GenerateTextContentRequestSchema: GenMessage<GenerateTextContentRequest>;

/**
 * @generated from message leetcoach.v1.GenerateTextContentResponse
 */
export declare type GenerateTextContentResponse = Message<"leetcoach.v1.GenerateTextContentResponse"> & {
  /**
   * The generated text content (likely HTML or Markdown)
   *
   * @generated from field: string generated_text = 1;
   */
  generatedText: string;
};

/**
 * Describes the message leetcoach.v1.GenerateTextContentResponse.
 * Use `create(GenerateTextContentResponseSchema)` to create a new message.
 */
export declare const GenerateTextContentResponseSchema: GenMessage<GenerateTextContentResponse>;

/**
 * @generated from message leetcoach.v1.ReviewTextContentRequest
 */
export declare type ReviewTextContentRequest = Message<"leetcoach.v1.ReviewTextContentRequest"> & {
  /**
   * @generated from field: string design_id = 1;
   */
  designId: string;

  /**
   * @generated from field: string section_id = 2;
   */
  sectionId: string;

  /**
   * Optional: Flags for review focus
   * map<string, bool> options = 3;
   *
   * @generated from field: string prompt_override = 4;
   */
  promptOverride: string;
};

/**
 * Describes the message leetcoach.v1.ReviewTextContentRequest.
 * Use `create(ReviewTextContentRequestSchema)` to create a new message.
 */
export declare const ReviewTextContentRequestSchema: GenMessage<ReviewTextContentRequest>;

/**
 * @generated from message leetcoach.v1.ReviewTextContentResponse
 */
export declare type ReviewTextContentResponse = Message<"leetcoach.v1.ReviewTextContentResponse"> & {
  /**
   * The LLM's review/critique comments
   *
   * @generated from field: string review_text = 1;
   */
  reviewText: string;
};

/**
 * Describes the message leetcoach.v1.ReviewTextContentResponse.
 * Use `create(ReviewTextContentResponseSchema)` to create a new message.
 */
export declare const ReviewTextContentResponseSchema: GenMessage<ReviewTextContentResponse>;

/**
 * LlmService provides access to Large Language Model features.
 *
 * @generated from service leetcoach.v1.LlmService
 */
export declare const LlmService: GenService<{
  /**
   * SimpleLlmQuery sends a basic prompt to the LLM.
   * Primarily for initial testing and simple use cases.
   *
   * @generated from rpc leetcoach.v1.LlmService.SimpleLlmQuery
   */
  simpleLlmQuery: {
    methodKind: "unary";
    input: typeof SimpleLlmQueryRequestSchema;
    output: typeof SimpleLlmQueryResponseSchema;
  },
  /**
   * SuggestSections recommends relevant sections to add based on existing ones.
   *
   * @generated from rpc leetcoach.v1.LlmService.SuggestSections
   */
  suggestSections: {
    methodKind: "unary";
    input: typeof SuggestSectionsRequestSchema;
    output: typeof SuggestSectionsResponseSchema;
  },
  /**
   * GenerateTextContent attempts to generate content for a text section.
   *
   * @generated from rpc leetcoach.v1.LlmService.GenerateTextContent
   */
  generateTextContent: {
    methodKind: "unary";
    input: typeof GenerateTextContentRequestSchema;
    output: typeof GenerateTextContentResponseSchema;
  },
  /**
   * ReviewTextContent asks the LLM to review existing text content.
   *
   * @generated from rpc leetcoach.v1.LlmService.ReviewTextContent
   */
  reviewTextContent: {
    methodKind: "unary";
    input: typeof ReviewTextContentRequestSchema;
    output: typeof ReviewTextContentResponseSchema;
  },
}>;

