// @generated by protoc-gen-connect-web v0.8.6
// @generated from file leetcoach/v1/tags.proto (package leetcoach.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateTagRequest, CreateTagResponse, DeleteTagRequest, DeleteTagResponse, GetTagRequest, GetTagResponse, GetTagsRequest, GetTagsResponse, ListTagsRequest, ListTagsResponse, UpdateTagRequest, UpdateTagResponse } from "./tags_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * *
 * Service for tags
 *
 * @generated from service leetcoach.v1.TagService
 */
export declare const TagService: {
  readonly typeName: "leetcoach.v1.TagService",
  readonly methods: {
    /**
     * *
     * Create a new tag.  If a tag by name already exists then it is returned.
     *
     * @generated from rpc leetcoach.v1.TagService.CreateTag
     */
    readonly createTag: {
      readonly name: "CreateTag",
      readonly I: typeof CreateTagRequest,
      readonly O: typeof CreateTagResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * *
     * List all tags
     *
     * @generated from rpc leetcoach.v1.TagService.ListTags
     */
    readonly listTags: {
      readonly name: "ListTags",
      readonly I: typeof ListTagsRequest,
      readonly O: typeof ListTagsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * *
     * Get a particular tag
     *
     * @generated from rpc leetcoach.v1.TagService.GetTag
     */
    readonly getTag: {
      readonly name: "GetTag",
      readonly I: typeof GetTagRequest,
      readonly O: typeof GetTagResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * *
     * Batch get multiple tags by ID
     *
     * @generated from rpc leetcoach.v1.TagService.GetTags
     */
    readonly getTags: {
      readonly name: "GetTags",
      readonly I: typeof GetTagsRequest,
      readonly O: typeof GetTagsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * *
     * Delete a particular tag
     *
     * @generated from rpc leetcoach.v1.TagService.DeleteTag
     */
    readonly deleteTag: {
      readonly name: "DeleteTag",
      readonly I: typeof DeleteTagRequest,
      readonly O: typeof DeleteTagResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * *
     * Updates specific fields of a tag
     *
     * @generated from rpc leetcoach.v1.TagService.UpdateTag
     */
    readonly updateTag: {
      readonly name: "UpdateTag",
      readonly I: typeof UpdateTagRequest,
      readonly O: typeof UpdateTagResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

