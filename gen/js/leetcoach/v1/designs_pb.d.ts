// @generated by protoc-gen-es v2.2.5
// @generated from file leetcoach/v1/designs.proto (package leetcoach.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Content, Design, Pagination, PaginationResponse } from "./models_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file leetcoach/v1/designs.proto.
 */
export declare const file_leetcoach_v1_designs: GenFile;

/**
 * *
 * Design creation request object
 *
 * @generated from message leetcoach.v1.CreateDesignRequest
 */
export declare type CreateDesignRequest = Message<"leetcoach.v1.CreateDesignRequest"> & {
  /**
   * *
   * Design being updated
   *
   * @generated from field: leetcoach.v1.Design design = 1;
   */
  design?: Design;

  /**
   * *
   * Which collection to post this design in
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;

  /**
   * *
   * Contents to save with.
   *
   * @generated from field: leetcoach.v1.Content content = 3;
   */
  content?: Content;
};

/**
 * Describes the message leetcoach.v1.CreateDesignRequest.
 * Use `create(CreateDesignRequestSchema)` to create a new message.
 */
export declare const CreateDesignRequestSchema: GenMessage<CreateDesignRequest>;

/**
 * *
 * Response of an design creation.
 *
 * @generated from message leetcoach.v1.CreateDesignResponse
 */
export declare type CreateDesignResponse = Message<"leetcoach.v1.CreateDesignResponse"> & {
  /**
   * *
   * Design being created
   *
   * @generated from field: leetcoach.v1.Design design = 1;
   */
  design?: Design;

  /**
   * *
   * Error specific to a field if there are any errors.
   *
   * @generated from field: map<string, string> field_errors = 2;
   */
  fieldErrors: { [key: string]: string };
};

/**
 * Describes the message leetcoach.v1.CreateDesignResponse.
 * Use `create(CreateDesignResponseSchema)` to create a new message.
 */
export declare const CreateDesignResponseSchema: GenMessage<CreateDesignResponse>;

/**
 * *
 * An design search request.  For now only paginations params are provided.
 *
 * @generated from message leetcoach.v1.ListDesignsRequest
 */
export declare type ListDesignsRequest = Message<"leetcoach.v1.ListDesignsRequest"> & {
  /**
   * Pagination info
   *
   * @generated from field: leetcoach.v1.Pagination pagination = 1;
   */
  pagination?: Pagination;

  /**
   * *
   * Limit to designs of a particular user
   *
   * @generated from field: string user_id = 3;
   */
  userId: string;

  /**
   * * 
   * Limit to designs in a collection
   *
   * @generated from field: string collection_id = 4;
   */
  collectionId: string;

  /**
   * *
   * Whether to only get public ones.
   *
   * @generated from field: bool limit_to_public = 5;
   */
  limitToPublic: boolean;

  /**
   * *
   * "recent" or "name"
   *
   * @generated from field: string order_by = 6;
   */
  orderBy: string;
};

/**
 * Describes the message leetcoach.v1.ListDesignsRequest.
 * Use `create(ListDesignsRequestSchema)` to create a new message.
 */
export declare const ListDesignsRequestSchema: GenMessage<ListDesignsRequest>;

/**
 * *
 * Response of a design search/listing.
 *
 * @generated from message leetcoach.v1.ListDesignsResponse
 */
export declare type ListDesignsResponse = Message<"leetcoach.v1.ListDesignsResponse"> & {
  /**
   * *
   * The list of designs found as part of this response.
   *
   * @generated from field: repeated leetcoach.v1.Design designs = 1;
   */
  designs: Design[];

  /**
   * @generated from field: leetcoach.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message leetcoach.v1.ListDesignsResponse.
 * Use `create(ListDesignsResponseSchema)` to create a new message.
 */
export declare const ListDesignsResponseSchema: GenMessage<ListDesignsResponse>;

/**
 * *
 * Request to get an design.
 *
 * @generated from message leetcoach.v1.GetDesignRequest
 */
export declare type GetDesignRequest = Message<"leetcoach.v1.GetDesignRequest"> & {
  /**
   * *
   * ID of the design to be fetched
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * *
   * Returns if contents are also to be returned.
   *
   * @generated from field: bool with_contents = 2;
   */
  withContents: boolean;
};

/**
 * Describes the message leetcoach.v1.GetDesignRequest.
 * Use `create(GetDesignRequestSchema)` to create a new message.
 */
export declare const GetDesignRequestSchema: GenMessage<GetDesignRequest>;

/**
 * *
 * Design get response
 *
 * @generated from message leetcoach.v1.GetDesignResponse
 */
export declare type GetDesignResponse = Message<"leetcoach.v1.GetDesignResponse"> & {
  /**
   * @generated from field: leetcoach.v1.Design design = 1;
   */
  design?: Design;

  /**
   * Content for the design if we need it
   *
   * @generated from field: leetcoach.v1.Content content = 2;
   */
  content?: Content;
};

/**
 * Describes the message leetcoach.v1.GetDesignResponse.
 * Use `create(GetDesignResponseSchema)` to create a new message.
 */
export declare const GetDesignResponseSchema: GenMessage<GetDesignResponse>;

/**
 * *
 * Request to batch get designs
 *
 * @generated from message leetcoach.v1.GetDesignsRequest
 */
export declare type GetDesignsRequest = Message<"leetcoach.v1.GetDesignsRequest"> & {
  /**
   * *
   * IDs of the design to be fetched
   *
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];
};

/**
 * Describes the message leetcoach.v1.GetDesignsRequest.
 * Use `create(GetDesignsRequestSchema)` to create a new message.
 */
export declare const GetDesignsRequestSchema: GenMessage<GetDesignsRequest>;

/**
 * *
 * Design batch-get response
 *
 * @generated from message leetcoach.v1.GetDesignsResponse
 */
export declare type GetDesignsResponse = Message<"leetcoach.v1.GetDesignsResponse"> & {
  /**
   * @generated from field: map<string, leetcoach.v1.Design> designs = 1;
   */
  designs: { [key: string]: Design };
};

/**
 * Describes the message leetcoach.v1.GetDesignsResponse.
 * Use `create(GetDesignsResponseSchema)` to create a new message.
 */
export declare const GetDesignsResponseSchema: GenMessage<GetDesignsResponse>;

/**
 * *
 * Request to delete an design.
 *
 * @generated from message leetcoach.v1.DeleteDesignRequest
 */
export declare type DeleteDesignRequest = Message<"leetcoach.v1.DeleteDesignRequest"> & {
  /**
   * *
   * ID of the design to be deleted.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message leetcoach.v1.DeleteDesignRequest.
 * Use `create(DeleteDesignRequestSchema)` to create a new message.
 */
export declare const DeleteDesignRequestSchema: GenMessage<DeleteDesignRequest>;

/**
 * *
 * Design deletion response
 *
 * @generated from message leetcoach.v1.DeleteDesignResponse
 */
export declare type DeleteDesignResponse = Message<"leetcoach.v1.DeleteDesignResponse"> & {
};

/**
 * Describes the message leetcoach.v1.DeleteDesignResponse.
 * Use `create(DeleteDesignResponseSchema)` to create a new message.
 */
export declare const DeleteDesignResponseSchema: GenMessage<DeleteDesignResponse>;

/**
 * *
 * The request for (partially) updating an Design.
 *
 * @generated from message leetcoach.v1.UpdateDesignRequest
 */
export declare type UpdateDesignRequest = Message<"leetcoach.v1.UpdateDesignRequest"> & {
  /**
   * *
   * Design being updated
   *
   * @generated from field: leetcoach.v1.Design design = 1;
   */
  design?: Design;

  /**
   * *
   * Mask of fields being updated in this Design to make partial changes.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * *
   * Update with new contents if provided.
   *
   * @generated from field: optional leetcoach.v1.Content content = 3;
   */
  content?: Content;
};

/**
 * Describes the message leetcoach.v1.UpdateDesignRequest.
 * Use `create(UpdateDesignRequestSchema)` to create a new message.
 */
export declare const UpdateDesignRequestSchema: GenMessage<UpdateDesignRequest>;

/**
 * *
 * The request for (partially) updating an Design.
 *
 * @generated from message leetcoach.v1.UpdateDesignResponse
 */
export declare type UpdateDesignResponse = Message<"leetcoach.v1.UpdateDesignResponse"> & {
  /**
   * *
   * Design being updated
   *
   * @generated from field: leetcoach.v1.Design design = 1;
   */
  design?: Design;
};

/**
 * Describes the message leetcoach.v1.UpdateDesignResponse.
 * Use `create(UpdateDesignResponseSchema)` to create a new message.
 */
export declare const UpdateDesignResponseSchema: GenMessage<UpdateDesignResponse>;

/**
 * *
 * Service for operating on design documents
 *
 * @generated from service leetcoach.v1.DesignService
 */
export declare const DesignService: GenService<{
  /**
   * *
   * Create a new sesssion
   *
   * @generated from rpc leetcoach.v1.DesignService.CreateDesign
   */
  createDesign: {
    methodKind: "unary";
    input: typeof CreateDesignRequestSchema;
    output: typeof CreateDesignResponseSchema;
  },
  /**
   * *
   * List all designs from a user.
   *
   * @generated from rpc leetcoach.v1.DesignService.ListDesigns
   */
  listDesigns: {
    methodKind: "unary";
    input: typeof ListDesignsRequestSchema;
    output: typeof ListDesignsResponseSchema;
  },
  /**
   * *
   * Get a particular design
   *
   * @generated from rpc leetcoach.v1.DesignService.GetDesign
   */
  getDesign: {
    methodKind: "unary";
    input: typeof GetDesignRequestSchema;
    output: typeof GetDesignResponseSchema;
  },
  /**
   * *
   * Batch get multiple designs by ID
   *
   * @generated from rpc leetcoach.v1.DesignService.GetDesigns
   */
  getDesigns: {
    methodKind: "unary";
    input: typeof GetDesignsRequestSchema;
    output: typeof GetDesignsResponseSchema;
  },
  /**
   * *
   * Delete a particular design
   *
   * @generated from rpc leetcoach.v1.DesignService.DeleteDesign
   */
  deleteDesign: {
    methodKind: "unary";
    input: typeof DeleteDesignRequestSchema;
    output: typeof DeleteDesignResponseSchema;
  },
  /**
   * *
   * Updates specific fields of a design
   *
   * @generated from rpc leetcoach.v1.DesignService.UpdateDesign
   */
  updateDesign: {
    methodKind: "unary";
    input: typeof UpdateDesignRequestSchema;
    output: typeof UpdateDesignResponseSchema;
  },
}>;

