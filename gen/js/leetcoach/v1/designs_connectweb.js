// protos/leetcoach/v1/designs.proto

// @generated by protoc-gen-connect-web v0.8.6
// @generated from file leetcoach/v1/designs.proto (package leetcoach.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddSectionRequest, CreateDesignRequest, CreateDesignResponse, DeleteDesignRequest, DeleteDesignResponse, DeleteSectionRequest, DeleteSectionResponse, GetDesignRequest, GetDesignResponse, GetDesignsRequest, GetDesignsResponse, GetSectionRequest, ListDesignsRequest, ListDesignsResponse, MoveSectionRequest, MoveSectionResponse, UpdateDesignRequest, UpdateDesignResponse, UpdateSectionRequest } from "./designs_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { Section } from "./models_pb.js";

/**
 * *
 * Service for operating on design documents
 *
 * @generated from service leetcoach.v1.DesignService
 */
export const DesignService = {
  typeName: "leetcoach.v1.DesignService",
  methods: {
    /**
     * *
     * Create a new sesssion
     *
     * @generated from rpc leetcoach.v1.DesignService.CreateDesign
     */
    createDesign: {
      name: "CreateDesign",
      I: CreateDesignRequest,
      O: CreateDesignResponse,
      kind: MethodKind.Unary,
    },
    /**
     * *
     * List all designs from a user.
     *
     * @generated from rpc leetcoach.v1.DesignService.ListDesigns
     */
    listDesigns: {
      name: "ListDesigns",
      I: ListDesignsRequest,
      O: ListDesignsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * *
     * Get a particular design
     *
     * @generated from rpc leetcoach.v1.DesignService.GetDesign
     */
    getDesign: {
      name: "GetDesign",
      I: GetDesignRequest,
      O: GetDesignResponse,
      kind: MethodKind.Unary,
    },
    /**
     * *
     * Batch get multiple designs by ID
     *
     * @generated from rpc leetcoach.v1.DesignService.GetDesigns
     */
    getDesigns: {
      name: "GetDesigns",
      I: GetDesignsRequest,
      O: GetDesignsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * *
     * Delete a particular design
     *
     * @generated from rpc leetcoach.v1.DesignService.DeleteDesign
     */
    deleteDesign: {
      name: "DeleteDesign",
      I: DeleteDesignRequest,
      O: DeleteDesignResponse,
      kind: MethodKind.Unary,
    },
    /**
     * *
     * Updates specific fields of a design
     *
     * @generated from rpc leetcoach.v1.DesignService.UpdateDesign
     */
    updateDesign: {
      name: "UpdateDesign",
      I: UpdateDesignRequest,
      O: UpdateDesignResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Adds a section to a design's section_ids list and creates the section resource.
     *
     * @generated from rpc leetcoach.v1.DesignService.AddSection
     */
    addSection: {
      name: "AddSection",
      I: AddSectionRequest,
      O: Section,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc leetcoach.v1.DesignService.GetSection
     */
    getSection: {
      name: "GetSection",
      I: GetSectionRequest,
      O: Section,
      kind: MethodKind.Unary,
    },
    /**
     * Use PATCH for partial updates to a section (title, content)
     *
     * @generated from rpc leetcoach.v1.DesignService.UpdateSection
     */
    updateSection: {
      name: "UpdateSection",
      I: UpdateSectionRequest,
      O: Section,
      kind: MethodKind.Unary,
    },
    /**
     * Moves a section within the Design's section_ids list
     * We could have done this via an UpdateDesign with the changed order but this is 
     * clearer and only needs to deal with the current (and target) section instead of
     * needing to know all sections for an update.
     *
     * @generated from rpc leetcoach.v1.DesignService.MoveSection
     */
    moveSection: {
      name: "MoveSection",
      I: MoveSectionRequest,
      O: MoveSectionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc leetcoach.v1.DesignService.DeleteSection
     */
    deleteSection: {
      name: "DeleteSection",
      I: DeleteSectionRequest,
      O: DeleteSectionResponse,
      kind: MethodKind.Unary,
    },
  }
};

