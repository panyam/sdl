# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from leetcoach.v1 import llm_service_pb2 as leetcoach_dot_v1_dot_llm__service__pb2


class LlmServiceStub(object):
    """LlmService provides access to Large Language Model features.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SimpleLlmQuery = channel.unary_unary(
                '/leetcoach.v1.LlmService/SimpleLlmQuery',
                request_serializer=leetcoach_dot_v1_dot_llm__service__pb2.SimpleLlmQueryRequest.SerializeToString,
                response_deserializer=leetcoach_dot_v1_dot_llm__service__pb2.SimpleLlmQueryResponse.FromString,
                _registered_method=True)
        self.SuggestSections = channel.unary_unary(
                '/leetcoach.v1.LlmService/SuggestSections',
                request_serializer=leetcoach_dot_v1_dot_llm__service__pb2.SuggestSectionsRequest.SerializeToString,
                response_deserializer=leetcoach_dot_v1_dot_llm__service__pb2.SuggestSectionsResponse.FromString,
                _registered_method=True)
        self.GenerateTextContent = channel.unary_unary(
                '/leetcoach.v1.LlmService/GenerateTextContent',
                request_serializer=leetcoach_dot_v1_dot_llm__service__pb2.GenerateTextContentRequest.SerializeToString,
                response_deserializer=leetcoach_dot_v1_dot_llm__service__pb2.GenerateTextContentResponse.FromString,
                _registered_method=True)
        self.ReviewTextContent = channel.unary_unary(
                '/leetcoach.v1.LlmService/ReviewTextContent',
                request_serializer=leetcoach_dot_v1_dot_llm__service__pb2.ReviewTextContentRequest.SerializeToString,
                response_deserializer=leetcoach_dot_v1_dot_llm__service__pb2.ReviewTextContentResponse.FromString,
                _registered_method=True)


class LlmServiceServicer(object):
    """LlmService provides access to Large Language Model features.
    """

    def SimpleLlmQuery(self, request, context):
        """SimpleLlmQuery sends a basic prompt to the LLM.
        Primarily for initial testing and simple use cases.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SuggestSections(self, request, context):
        """SuggestSections recommends relevant sections to add based on existing ones.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateTextContent(self, request, context):
        """GenerateTextContent attempts to generate content for a text section.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReviewTextContent(self, request, context):
        """ReviewTextContent asks the LLM to review existing text content.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LlmServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SimpleLlmQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.SimpleLlmQuery,
                    request_deserializer=leetcoach_dot_v1_dot_llm__service__pb2.SimpleLlmQueryRequest.FromString,
                    response_serializer=leetcoach_dot_v1_dot_llm__service__pb2.SimpleLlmQueryResponse.SerializeToString,
            ),
            'SuggestSections': grpc.unary_unary_rpc_method_handler(
                    servicer.SuggestSections,
                    request_deserializer=leetcoach_dot_v1_dot_llm__service__pb2.SuggestSectionsRequest.FromString,
                    response_serializer=leetcoach_dot_v1_dot_llm__service__pb2.SuggestSectionsResponse.SerializeToString,
            ),
            'GenerateTextContent': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateTextContent,
                    request_deserializer=leetcoach_dot_v1_dot_llm__service__pb2.GenerateTextContentRequest.FromString,
                    response_serializer=leetcoach_dot_v1_dot_llm__service__pb2.GenerateTextContentResponse.SerializeToString,
            ),
            'ReviewTextContent': grpc.unary_unary_rpc_method_handler(
                    servicer.ReviewTextContent,
                    request_deserializer=leetcoach_dot_v1_dot_llm__service__pb2.ReviewTextContentRequest.FromString,
                    response_serializer=leetcoach_dot_v1_dot_llm__service__pb2.ReviewTextContentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'leetcoach.v1.LlmService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('leetcoach.v1.LlmService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class LlmService(object):
    """LlmService provides access to Large Language Model features.
    """

    @staticmethod
    def SimpleLlmQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/leetcoach.v1.LlmService/SimpleLlmQuery',
            leetcoach_dot_v1_dot_llm__service__pb2.SimpleLlmQueryRequest.SerializeToString,
            leetcoach_dot_v1_dot_llm__service__pb2.SimpleLlmQueryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SuggestSections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/leetcoach.v1.LlmService/SuggestSections',
            leetcoach_dot_v1_dot_llm__service__pb2.SuggestSectionsRequest.SerializeToString,
            leetcoach_dot_v1_dot_llm__service__pb2.SuggestSectionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateTextContent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/leetcoach.v1.LlmService/GenerateTextContent',
            leetcoach_dot_v1_dot_llm__service__pb2.GenerateTextContentRequest.SerializeToString,
            leetcoach_dot_v1_dot_llm__service__pb2.GenerateTextContentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReviewTextContent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/leetcoach.v1.LlmService/ReviewTextContent',
            leetcoach_dot_v1_dot_llm__service__pb2.ReviewTextContentRequest.SerializeToString,
            leetcoach_dot_v1_dot_llm__service__pb2.ReviewTextContentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
