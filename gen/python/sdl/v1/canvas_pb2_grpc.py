# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sdl.v1 import canvas_pb2 as sdl_dot_v1_dot_canvas__pb2


class CanvasServiceStub(object):
    """*
    Service for interacting with a canvas.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCanvas = channel.unary_unary(
                '/sdl.v1.CanvasService/CreateCanvas',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.CreateCanvasRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.CreateCanvasResponse.FromString,
                _registered_method=True)
        self.ListCanvases = channel.unary_unary(
                '/sdl.v1.CanvasService/ListCanvases',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.ListCanvasesRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.ListCanvasesResponse.FromString,
                _registered_method=True)
        self.GetCanvas = channel.unary_unary(
                '/sdl.v1.CanvasService/GetCanvas',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.GetCanvasRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.GetCanvasResponse.FromString,
                _registered_method=True)
        self.LoadFile = channel.unary_unary(
                '/sdl.v1.CanvasService/LoadFile',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.LoadFileRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.LoadFileResponse.FromString,
                _registered_method=True)
        self.UseSystem = channel.unary_unary(
                '/sdl.v1.CanvasService/UseSystem',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.UseSystemRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.UseSystemResponse.FromString,
                _registered_method=True)
        self.DeleteCanvas = channel.unary_unary(
                '/sdl.v1.CanvasService/DeleteCanvas',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.DeleteCanvasRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.DeleteCanvasResponse.FromString,
                _registered_method=True)
        self.ResetCanvas = channel.unary_unary(
                '/sdl.v1.CanvasService/ResetCanvas',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.ResetCanvasRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.ResetCanvasResponse.FromString,
                _registered_method=True)
        self.AddGenerator = channel.unary_unary(
                '/sdl.v1.CanvasService/AddGenerator',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.AddGeneratorRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.AddGeneratorResponse.FromString,
                _registered_method=True)
        self.StartAllGenerators = channel.unary_unary(
                '/sdl.v1.CanvasService/StartAllGenerators',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.StartAllGeneratorsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.StartAllGeneratorsResponse.FromString,
                _registered_method=True)
        self.StopAllGenerators = channel.unary_unary(
                '/sdl.v1.CanvasService/StopAllGenerators',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.StopAllGeneratorsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.StopAllGeneratorsResponse.FromString,
                _registered_method=True)
        self.ListGenerators = channel.unary_unary(
                '/sdl.v1.CanvasService/ListGenerators',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.ListGeneratorsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.ListGeneratorsResponse.FromString,
                _registered_method=True)
        self.GetGenerator = channel.unary_unary(
                '/sdl.v1.CanvasService/GetGenerator',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.GetGeneratorRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.GetGeneratorResponse.FromString,
                _registered_method=True)
        self.UpdateGenerator = channel.unary_unary(
                '/sdl.v1.CanvasService/UpdateGenerator',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.UpdateGeneratorRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.UpdateGeneratorResponse.FromString,
                _registered_method=True)
        self.StopGenerator = channel.unary_unary(
                '/sdl.v1.CanvasService/StopGenerator',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.StopGeneratorRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.StopGeneratorResponse.FromString,
                _registered_method=True)
        self.StartGenerator = channel.unary_unary(
                '/sdl.v1.CanvasService/StartGenerator',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.StartGeneratorRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.StartGeneratorResponse.FromString,
                _registered_method=True)
        self.DeleteGenerator = channel.unary_unary(
                '/sdl.v1.CanvasService/DeleteGenerator',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.DeleteGeneratorRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.DeleteGeneratorResponse.FromString,
                _registered_method=True)
        self.ExecuteTrace = channel.unary_unary(
                '/sdl.v1.CanvasService/ExecuteTrace',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.ExecuteTraceRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.ExecuteTraceResponse.FromString,
                _registered_method=True)
        self.TraceAllPaths = channel.unary_unary(
                '/sdl.v1.CanvasService/TraceAllPaths',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.TraceAllPathsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.TraceAllPathsResponse.FromString,
                _registered_method=True)
        self.SetParameter = channel.unary_unary(
                '/sdl.v1.CanvasService/SetParameter',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.SetParameterRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.SetParameterResponse.FromString,
                _registered_method=True)
        self.GetParameters = channel.unary_unary(
                '/sdl.v1.CanvasService/GetParameters',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.GetParametersRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.GetParametersResponse.FromString,
                _registered_method=True)
        self.BatchSetParameters = channel.unary_unary(
                '/sdl.v1.CanvasService/BatchSetParameters',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.BatchSetParametersRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.BatchSetParametersResponse.FromString,
                _registered_method=True)
        self.EvaluateFlows = channel.unary_unary(
                '/sdl.v1.CanvasService/EvaluateFlows',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.EvaluateFlowsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.EvaluateFlowsResponse.FromString,
                _registered_method=True)
        self.GetFlowState = channel.unary_unary(
                '/sdl.v1.CanvasService/GetFlowState',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.GetFlowStateRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.GetFlowStateResponse.FromString,
                _registered_method=True)
        self.AddMetric = channel.unary_unary(
                '/sdl.v1.CanvasService/AddMetric',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.AddMetricRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.AddMetricResponse.FromString,
                _registered_method=True)
        self.DeleteMetric = channel.unary_unary(
                '/sdl.v1.CanvasService/DeleteMetric',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.DeleteMetricRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.DeleteMetricResponse.FromString,
                _registered_method=True)
        self.ListMetrics = channel.unary_unary(
                '/sdl.v1.CanvasService/ListMetrics',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.ListMetricsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.ListMetricsResponse.FromString,
                _registered_method=True)
        self.QueryMetrics = channel.unary_unary(
                '/sdl.v1.CanvasService/QueryMetrics',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.QueryMetricsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.QueryMetricsResponse.FromString,
                _registered_method=True)
        self.StreamMetrics = channel.unary_stream(
                '/sdl.v1.CanvasService/StreamMetrics',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.StreamMetricsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.StreamMetricsResponse.FromString,
                _registered_method=True)
        self.GetSystemDiagram = channel.unary_unary(
                '/sdl.v1.CanvasService/GetSystemDiagram',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.GetSystemDiagramRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.GetSystemDiagramResponse.FromString,
                _registered_method=True)
        self.GetUtilization = channel.unary_unary(
                '/sdl.v1.CanvasService/GetUtilization',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.GetUtilizationRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.GetUtilizationResponse.FromString,
                _registered_method=True)


class CanvasServiceServicer(object):
    """*
    Service for interacting with a canvas.
    """

    def CreateCanvas(self, request, context):
        """*
        Create a new canvas sesssion.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCanvases(self, request, context):
        """*
        List all canvases from a user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCanvas(self, request, context):
        """*
        Get details/stats for a particular canvas
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UseSystem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCanvas(self, request, context):
        """*
        Delete a particular canvas.  Frees up resources used by it and all the connections
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetCanvas(self, request, context):
        """*
        Reset a canvas - clears all state, generators, and metrics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddGenerator(self, request, context):
        """----- Generator Operations -----
        Adds a generator to a canvas's generator_ids list and creates the generator resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartAllGenerators(self, request, context):
        """Request to start all generators
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopAllGenerators(self, request, context):
        """Request to start all generators
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGenerators(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGenerator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateGenerator(self, request, context):
        """Use PATCH for partial updates to a generator (title, content)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopGenerator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartGenerator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteGenerator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteTrace(self, request, context):
        """Execute a single trace for debugging/analysis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TraceAllPaths(self, request, context):
        """Execute breadth-first traversal to find all possible execution paths
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetParameter(self, request, context):
        """----- Parameter Operations -----
        Set a component parameter value
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetParameters(self, request, context):
        """Get parameter values
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchSetParameters(self, request, context):
        """Batch set multiple parameters atomically
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateFlows(self, request, context):
        """----- Flow Analysis Operations -----
        Evaluate system flows using specified strategy
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFlowState(self, request, context):
        """Get current flow state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMetric(self, request, context):
        """----- Generator Operations -----
        Adds a metric to live plot
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMetric(self, request, context):
        """*
        Delete a particular metriccanvas.  Frees up resources used by it and all the connections
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMetrics(self, request, context):
        """--- Metric Query Operations ---

        List all available metrics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryMetrics(self, request, context):
        """Query raw metric data points
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamMetrics(self, request, context):
        """Stream real-time metric updates
        Note: Server-streaming RPCs are not supported by grpc-gateway HTTP mapping
        This will only be available via gRPC or Connect protocol
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSystemDiagram(self, request, context):
        """----- System Diagram Operations -----

        Get the system diagram for visualization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUtilization(self, request, context):
        """----- Utilization Operations -----

        Get resource utilization information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CanvasServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCanvas': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCanvas,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.CreateCanvasRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.CreateCanvasResponse.SerializeToString,
            ),
            'ListCanvases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCanvases,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.ListCanvasesRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.ListCanvasesResponse.SerializeToString,
            ),
            'GetCanvas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCanvas,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.GetCanvasRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.GetCanvasResponse.SerializeToString,
            ),
            'LoadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadFile,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.LoadFileRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.LoadFileResponse.SerializeToString,
            ),
            'UseSystem': grpc.unary_unary_rpc_method_handler(
                    servicer.UseSystem,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.UseSystemRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.UseSystemResponse.SerializeToString,
            ),
            'DeleteCanvas': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCanvas,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.DeleteCanvasRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.DeleteCanvasResponse.SerializeToString,
            ),
            'ResetCanvas': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetCanvas,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.ResetCanvasRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.ResetCanvasResponse.SerializeToString,
            ),
            'AddGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.AddGenerator,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.AddGeneratorRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.AddGeneratorResponse.SerializeToString,
            ),
            'StartAllGenerators': grpc.unary_unary_rpc_method_handler(
                    servicer.StartAllGenerators,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.StartAllGeneratorsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.StartAllGeneratorsResponse.SerializeToString,
            ),
            'StopAllGenerators': grpc.unary_unary_rpc_method_handler(
                    servicer.StopAllGenerators,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.StopAllGeneratorsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.StopAllGeneratorsResponse.SerializeToString,
            ),
            'ListGenerators': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGenerators,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.ListGeneratorsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.ListGeneratorsResponse.SerializeToString,
            ),
            'GetGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGenerator,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.GetGeneratorRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.GetGeneratorResponse.SerializeToString,
            ),
            'UpdateGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateGenerator,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.UpdateGeneratorRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.UpdateGeneratorResponse.SerializeToString,
            ),
            'StopGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.StopGenerator,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.StopGeneratorRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.StopGeneratorResponse.SerializeToString,
            ),
            'StartGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.StartGenerator,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.StartGeneratorRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.StartGeneratorResponse.SerializeToString,
            ),
            'DeleteGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteGenerator,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.DeleteGeneratorRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.DeleteGeneratorResponse.SerializeToString,
            ),
            'ExecuteTrace': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteTrace,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.ExecuteTraceRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.ExecuteTraceResponse.SerializeToString,
            ),
            'TraceAllPaths': grpc.unary_unary_rpc_method_handler(
                    servicer.TraceAllPaths,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.TraceAllPathsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.TraceAllPathsResponse.SerializeToString,
            ),
            'SetParameter': grpc.unary_unary_rpc_method_handler(
                    servicer.SetParameter,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.SetParameterRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.SetParameterResponse.SerializeToString,
            ),
            'GetParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetParameters,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.GetParametersRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.GetParametersResponse.SerializeToString,
            ),
            'BatchSetParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchSetParameters,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.BatchSetParametersRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.BatchSetParametersResponse.SerializeToString,
            ),
            'EvaluateFlows': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateFlows,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.EvaluateFlowsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.EvaluateFlowsResponse.SerializeToString,
            ),
            'GetFlowState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFlowState,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.GetFlowStateRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.GetFlowStateResponse.SerializeToString,
            ),
            'AddMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMetric,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.AddMetricRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.AddMetricResponse.SerializeToString,
            ),
            'DeleteMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMetric,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.DeleteMetricRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.DeleteMetricResponse.SerializeToString,
            ),
            'ListMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMetrics,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.ListMetricsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.ListMetricsResponse.SerializeToString,
            ),
            'QueryMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryMetrics,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.QueryMetricsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.QueryMetricsResponse.SerializeToString,
            ),
            'StreamMetrics': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamMetrics,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.StreamMetricsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.StreamMetricsResponse.SerializeToString,
            ),
            'GetSystemDiagram': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSystemDiagram,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.GetSystemDiagramRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.GetSystemDiagramResponse.SerializeToString,
            ),
            'GetUtilization': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUtilization,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.GetUtilizationRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.GetUtilizationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sdl.v1.CanvasService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('sdl.v1.CanvasService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CanvasService(object):
    """*
    Service for interacting with a canvas.
    """

    @staticmethod
    def CreateCanvas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/CreateCanvas',
            sdl_dot_v1_dot_canvas__pb2.CreateCanvasRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.CreateCanvasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListCanvases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/ListCanvases',
            sdl_dot_v1_dot_canvas__pb2.ListCanvasesRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.ListCanvasesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCanvas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/GetCanvas',
            sdl_dot_v1_dot_canvas__pb2.GetCanvasRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.GetCanvasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/LoadFile',
            sdl_dot_v1_dot_canvas__pb2.LoadFileRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.LoadFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UseSystem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/UseSystem',
            sdl_dot_v1_dot_canvas__pb2.UseSystemRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.UseSystemResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteCanvas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/DeleteCanvas',
            sdl_dot_v1_dot_canvas__pb2.DeleteCanvasRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.DeleteCanvasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetCanvas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/ResetCanvas',
            sdl_dot_v1_dot_canvas__pb2.ResetCanvasRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.ResetCanvasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/AddGenerator',
            sdl_dot_v1_dot_canvas__pb2.AddGeneratorRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.AddGeneratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartAllGenerators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/StartAllGenerators',
            sdl_dot_v1_dot_canvas__pb2.StartAllGeneratorsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.StartAllGeneratorsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopAllGenerators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/StopAllGenerators',
            sdl_dot_v1_dot_canvas__pb2.StopAllGeneratorsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.StopAllGeneratorsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListGenerators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/ListGenerators',
            sdl_dot_v1_dot_canvas__pb2.ListGeneratorsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.ListGeneratorsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/GetGenerator',
            sdl_dot_v1_dot_canvas__pb2.GetGeneratorRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.GetGeneratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/UpdateGenerator',
            sdl_dot_v1_dot_canvas__pb2.UpdateGeneratorRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.UpdateGeneratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/StopGenerator',
            sdl_dot_v1_dot_canvas__pb2.StopGeneratorRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.StopGeneratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/StartGenerator',
            sdl_dot_v1_dot_canvas__pb2.StartGeneratorRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.StartGeneratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/DeleteGenerator',
            sdl_dot_v1_dot_canvas__pb2.DeleteGeneratorRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.DeleteGeneratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteTrace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/ExecuteTrace',
            sdl_dot_v1_dot_canvas__pb2.ExecuteTraceRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.ExecuteTraceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TraceAllPaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/TraceAllPaths',
            sdl_dot_v1_dot_canvas__pb2.TraceAllPathsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.TraceAllPathsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetParameter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/SetParameter',
            sdl_dot_v1_dot_canvas__pb2.SetParameterRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.SetParameterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/GetParameters',
            sdl_dot_v1_dot_canvas__pb2.GetParametersRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.GetParametersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchSetParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/BatchSetParameters',
            sdl_dot_v1_dot_canvas__pb2.BatchSetParametersRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.BatchSetParametersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EvaluateFlows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/EvaluateFlows',
            sdl_dot_v1_dot_canvas__pb2.EvaluateFlowsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.EvaluateFlowsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFlowState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/GetFlowState',
            sdl_dot_v1_dot_canvas__pb2.GetFlowStateRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.GetFlowStateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/AddMetric',
            sdl_dot_v1_dot_canvas__pb2.AddMetricRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.AddMetricResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/DeleteMetric',
            sdl_dot_v1_dot_canvas__pb2.DeleteMetricRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.DeleteMetricResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/ListMetrics',
            sdl_dot_v1_dot_canvas__pb2.ListMetricsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.ListMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/QueryMetrics',
            sdl_dot_v1_dot_canvas__pb2.QueryMetricsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.QueryMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/sdl.v1.CanvasService/StreamMetrics',
            sdl_dot_v1_dot_canvas__pb2.StreamMetricsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.StreamMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSystemDiagram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/GetSystemDiagram',
            sdl_dot_v1_dot_canvas__pb2.GetSystemDiagramRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.GetSystemDiagramResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUtilization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/GetUtilization',
            sdl_dot_v1_dot_canvas__pb2.GetUtilizationRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.GetUtilizationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
