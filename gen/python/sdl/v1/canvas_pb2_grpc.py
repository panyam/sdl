# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sdl.v1 import canvas_pb2 as sdl_dot_v1_dot_canvas__pb2


class CanvasServiceStub(object):
    """*
    Service for interacting with a canvas.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCanvas = channel.unary_unary(
                '/sdl.v1.CanvasService/CreateCanvas',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.CreateCanvasRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.CreateCanvasResponse.FromString,
                _registered_method=True)
        self.ListCanvases = channel.unary_unary(
                '/sdl.v1.CanvasService/ListCanvases',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.ListCanvasesRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.ListCanvasesResponse.FromString,
                _registered_method=True)
        self.GetCanvas = channel.unary_unary(
                '/sdl.v1.CanvasService/GetCanvas',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.GetCanvasRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.GetCanvasResponse.FromString,
                _registered_method=True)
        self.LoadFile = channel.unary_unary(
                '/sdl.v1.CanvasService/LoadFile',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.LoadFileRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.LoadFileResponse.FromString,
                _registered_method=True)
        self.UseSystem = channel.unary_unary(
                '/sdl.v1.CanvasService/UseSystem',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.UseSystemRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.UseSystemResponse.FromString,
                _registered_method=True)
        self.DeleteCanvas = channel.unary_unary(
                '/sdl.v1.CanvasService/DeleteCanvas',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.DeleteCanvasRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.DeleteCanvasResponse.FromString,
                _registered_method=True)
        self.AddGenerator = channel.unary_unary(
                '/sdl.v1.CanvasService/AddGenerator',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.AddGeneratorRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.AddGeneratorResponse.FromString,
                _registered_method=True)
        self.StartAllGenerators = channel.unary_unary(
                '/sdl.v1.CanvasService/StartAllGenerators',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.StartAllGeneratorsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.StartAllGeneratorsResponse.FromString,
                _registered_method=True)
        self.StopAllGenerators = channel.unary_unary(
                '/sdl.v1.CanvasService/StopAllGenerators',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.StopAllGeneratorsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.StopAllGeneratorsResponse.FromString,
                _registered_method=True)
        self.ListGenerators = channel.unary_unary(
                '/sdl.v1.CanvasService/ListGenerators',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.ListGeneratorsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.ListGeneratorsResponse.FromString,
                _registered_method=True)
        self.GetGenerator = channel.unary_unary(
                '/sdl.v1.CanvasService/GetGenerator',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.GetGeneratorRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.GetGeneratorResponse.FromString,
                _registered_method=True)
        self.UpdateGenerator = channel.unary_unary(
                '/sdl.v1.CanvasService/UpdateGenerator',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.UpdateGeneratorRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.UpdateGeneratorResponse.FromString,
                _registered_method=True)
        self.PauseGenerator = channel.unary_unary(
                '/sdl.v1.CanvasService/PauseGenerator',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.PauseGeneratorRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.PauseGeneratorResponse.FromString,
                _registered_method=True)
        self.ResumeGenerator = channel.unary_unary(
                '/sdl.v1.CanvasService/ResumeGenerator',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.ResumeGeneratorRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.ResumeGeneratorResponse.FromString,
                _registered_method=True)
        self.DeleteGenerator = channel.unary_unary(
                '/sdl.v1.CanvasService/DeleteGenerator',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.DeleteGeneratorRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.DeleteGeneratorResponse.FromString,
                _registered_method=True)
        self.AddMetric = channel.unary_unary(
                '/sdl.v1.CanvasService/AddMetric',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.AddMetricRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.AddMetricResponse.FromString,
                _registered_method=True)
        self.DeleteMetric = channel.unary_unary(
                '/sdl.v1.CanvasService/DeleteMetric',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.DeleteMetricRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.DeleteMetricResponse.FromString,
                _registered_method=True)
        self.LiveMetric = channel.unary_stream(
                '/sdl.v1.CanvasService/LiveMetric',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.LiveMetricsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.LiveMetricsResponse.FromString,
                _registered_method=True)
        self.ExecuteTrace = channel.unary_unary(
                '/sdl.v1.CanvasService/ExecuteTrace',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.ExecuteTraceRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.ExecuteTraceResponse.FromString,
                _registered_method=True)
        self.ListMetrics = channel.unary_unary(
                '/sdl.v1.CanvasService/ListMetrics',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.ListMetricsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.ListMetricsResponse.FromString,
                _registered_method=True)
        self.QueryMetrics = channel.unary_unary(
                '/sdl.v1.CanvasService/QueryMetrics',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.QueryMetricsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.QueryMetricsResponse.FromString,
                _registered_method=True)
        self.AggregateMetrics = channel.unary_unary(
                '/sdl.v1.CanvasService/AggregateMetrics',
                request_serializer=sdl_dot_v1_dot_canvas__pb2.AggregateMetricsRequest.SerializeToString,
                response_deserializer=sdl_dot_v1_dot_canvas__pb2.AggregateMetricsResponse.FromString,
                _registered_method=True)


class CanvasServiceServicer(object):
    """*
    Service for interacting with a canvas.
    """

    def CreateCanvas(self, request, context):
        """*
        Create a new canvas sesssion.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCanvases(self, request, context):
        """*
        List all canvases from a user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCanvas(self, request, context):
        """*
        Get details/stats for a particular canvas
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UseSystem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCanvas(self, request, context):
        """*
        Delete a particular canvas.  Frees up resources used by it and all the connections
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddGenerator(self, request, context):
        """----- Generator Operations -----
        Adds a generator to a canvas's generator_ids list and creates the generator resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartAllGenerators(self, request, context):
        """Request to start all generators
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopAllGenerators(self, request, context):
        """Request to start all generators
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGenerators(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGenerator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateGenerator(self, request, context):
        """Use PATCH for partial updates to a generator (title, content)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseGenerator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeGenerator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteGenerator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMetric(self, request, context):
        """----- Generator Operations -----
        Adds a metric to live plot
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMetric(self, request, context):
        """*
        Delete a particular metriccanvas.  Frees up resources used by it and all the connections
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LiveMetric(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteTrace(self, request, context):
        """Execute a single trace for debugging/analysis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMetrics(self, request, context):
        """--- Metric Query Operations ---

        List all available metrics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryMetrics(self, request, context):
        """Query raw metric data points
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AggregateMetrics(self, request, context):
        """Get aggregated metric data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CanvasServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCanvas': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCanvas,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.CreateCanvasRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.CreateCanvasResponse.SerializeToString,
            ),
            'ListCanvases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCanvases,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.ListCanvasesRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.ListCanvasesResponse.SerializeToString,
            ),
            'GetCanvas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCanvas,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.GetCanvasRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.GetCanvasResponse.SerializeToString,
            ),
            'LoadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadFile,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.LoadFileRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.LoadFileResponse.SerializeToString,
            ),
            'UseSystem': grpc.unary_unary_rpc_method_handler(
                    servicer.UseSystem,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.UseSystemRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.UseSystemResponse.SerializeToString,
            ),
            'DeleteCanvas': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCanvas,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.DeleteCanvasRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.DeleteCanvasResponse.SerializeToString,
            ),
            'AddGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.AddGenerator,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.AddGeneratorRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.AddGeneratorResponse.SerializeToString,
            ),
            'StartAllGenerators': grpc.unary_unary_rpc_method_handler(
                    servicer.StartAllGenerators,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.StartAllGeneratorsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.StartAllGeneratorsResponse.SerializeToString,
            ),
            'StopAllGenerators': grpc.unary_unary_rpc_method_handler(
                    servicer.StopAllGenerators,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.StopAllGeneratorsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.StopAllGeneratorsResponse.SerializeToString,
            ),
            'ListGenerators': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGenerators,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.ListGeneratorsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.ListGeneratorsResponse.SerializeToString,
            ),
            'GetGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGenerator,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.GetGeneratorRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.GetGeneratorResponse.SerializeToString,
            ),
            'UpdateGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateGenerator,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.UpdateGeneratorRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.UpdateGeneratorResponse.SerializeToString,
            ),
            'PauseGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseGenerator,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.PauseGeneratorRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.PauseGeneratorResponse.SerializeToString,
            ),
            'ResumeGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeGenerator,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.ResumeGeneratorRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.ResumeGeneratorResponse.SerializeToString,
            ),
            'DeleteGenerator': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteGenerator,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.DeleteGeneratorRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.DeleteGeneratorResponse.SerializeToString,
            ),
            'AddMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMetric,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.AddMetricRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.AddMetricResponse.SerializeToString,
            ),
            'DeleteMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMetric,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.DeleteMetricRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.DeleteMetricResponse.SerializeToString,
            ),
            'LiveMetric': grpc.unary_stream_rpc_method_handler(
                    servicer.LiveMetric,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.LiveMetricsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.LiveMetricsResponse.SerializeToString,
            ),
            'ExecuteTrace': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteTrace,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.ExecuteTraceRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.ExecuteTraceResponse.SerializeToString,
            ),
            'ListMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMetrics,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.ListMetricsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.ListMetricsResponse.SerializeToString,
            ),
            'QueryMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryMetrics,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.QueryMetricsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.QueryMetricsResponse.SerializeToString,
            ),
            'AggregateMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.AggregateMetrics,
                    request_deserializer=sdl_dot_v1_dot_canvas__pb2.AggregateMetricsRequest.FromString,
                    response_serializer=sdl_dot_v1_dot_canvas__pb2.AggregateMetricsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sdl.v1.CanvasService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('sdl.v1.CanvasService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CanvasService(object):
    """*
    Service for interacting with a canvas.
    """

    @staticmethod
    def CreateCanvas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/CreateCanvas',
            sdl_dot_v1_dot_canvas__pb2.CreateCanvasRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.CreateCanvasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListCanvases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/ListCanvases',
            sdl_dot_v1_dot_canvas__pb2.ListCanvasesRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.ListCanvasesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCanvas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/GetCanvas',
            sdl_dot_v1_dot_canvas__pb2.GetCanvasRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.GetCanvasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/LoadFile',
            sdl_dot_v1_dot_canvas__pb2.LoadFileRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.LoadFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UseSystem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/UseSystem',
            sdl_dot_v1_dot_canvas__pb2.UseSystemRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.UseSystemResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteCanvas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/DeleteCanvas',
            sdl_dot_v1_dot_canvas__pb2.DeleteCanvasRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.DeleteCanvasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/AddGenerator',
            sdl_dot_v1_dot_canvas__pb2.AddGeneratorRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.AddGeneratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartAllGenerators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/StartAllGenerators',
            sdl_dot_v1_dot_canvas__pb2.StartAllGeneratorsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.StartAllGeneratorsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopAllGenerators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/StopAllGenerators',
            sdl_dot_v1_dot_canvas__pb2.StopAllGeneratorsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.StopAllGeneratorsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListGenerators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/ListGenerators',
            sdl_dot_v1_dot_canvas__pb2.ListGeneratorsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.ListGeneratorsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/GetGenerator',
            sdl_dot_v1_dot_canvas__pb2.GetGeneratorRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.GetGeneratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/UpdateGenerator',
            sdl_dot_v1_dot_canvas__pb2.UpdateGeneratorRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.UpdateGeneratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PauseGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/PauseGenerator',
            sdl_dot_v1_dot_canvas__pb2.PauseGeneratorRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.PauseGeneratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResumeGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/ResumeGenerator',
            sdl_dot_v1_dot_canvas__pb2.ResumeGeneratorRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.ResumeGeneratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteGenerator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/DeleteGenerator',
            sdl_dot_v1_dot_canvas__pb2.DeleteGeneratorRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.DeleteGeneratorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/AddMetric',
            sdl_dot_v1_dot_canvas__pb2.AddMetricRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.AddMetricResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/DeleteMetric',
            sdl_dot_v1_dot_canvas__pb2.DeleteMetricRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.DeleteMetricResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LiveMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/sdl.v1.CanvasService/LiveMetric',
            sdl_dot_v1_dot_canvas__pb2.LiveMetricsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.LiveMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExecuteTrace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/ExecuteTrace',
            sdl_dot_v1_dot_canvas__pb2.ExecuteTraceRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.ExecuteTraceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/ListMetrics',
            sdl_dot_v1_dot_canvas__pb2.ListMetricsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.ListMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def QueryMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/QueryMetrics',
            sdl_dot_v1_dot_canvas__pb2.QueryMetricsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.QueryMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AggregateMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdl.v1.CanvasService/AggregateMetrics',
            sdl_dot_v1_dot_canvas__pb2.AggregateMetricsRequest.SerializeToString,
            sdl_dot_v1_dot_canvas__pb2.AggregateMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
